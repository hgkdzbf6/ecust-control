   1              		.file	"sdk.c"
   3              		.text
   4              	.Ltext0:
 130              		.global	allDataBuffer
 131              		.bss
 134              	allDataBuffer:
 135 0000 00000000 		.space	400
 135      00000000 
 135      00000000 
 135      00000000 
 135      00000000 
 136              		.global	receivedViconData
 137              		.align	2
 140              	receivedViconData:
 141 0190 00000000 		.space	40
 141      00000000 
 141      00000000 
 141      00000000 
 141      00000000 
 142              		.global	sendDebugData
 143              		.align	2
 146              	sendDebugData:
 147 01b8 00000000 		.space	64
 147      00000000 
 147      00000000 
 147      00000000 
 147      00000000 
 148              		.global	receiveDebugData
 149              		.align	2
 152              	receiveDebugData:
 153 01f8 00000000 		.space	64
 153      00000000 
 153      00000000 
 153      00000000 
 153      00000000 
 154              		.global	sendParamDebug
 155              		.align	2
 158              	sendParamDebug:
 159 0238 00000000 		.space	36
 159      00000000 
 159      00000000 
 159      00000000 
 159      00000000 
 160              		.global	receiveParamDebug
 161              		.align	2
 164              	receiveParamDebug:
 165 025c 00000000 		.space	36
 165      00000000 
 165      00000000 
 165      00000000 
 165      00000000 
 166              		.global	sendPositionWayPointData
 167              		.align	2
 170              	sendPositionWayPointData:
 171 0280 00000000 		.space	12
 171      00000000 
 171      00000000 
 172              		.global	receivePositionWayPointData
 173              		.align	2
 176              	receivePositionWayPointData:
 177 028c 00000000 		.space	12
 177      00000000 
 177      00000000 
 178              		.global	sendLandSignal
 179              		.align	2
 182              	sendLandSignal:
 183 0298 00000000 		.space	4
 184              		.global	receiveLandSignal
 185              		.align	2
 188              	receiveLandSignal:
 189 029c 00000000 		.space	4
 190              		.global	receiveCmdData
 191              		.data
 192              		.align	2
 195              	receiveCmdData:
 196 0000 05000000 		.word	5
 197              		.global	sendNormalData
 198              		.bss
 199              		.align	2
 202              	sendNormalData:
 203 02a0 00000000 		.space	64
 203      00000000 
 203      00000000 
 203      00000000 
 203      00000000 
 204              		.global	receiveNormalData
 205              		.align	2
 208              	receiveNormalData:
 209 02e0 00000000 		.space	64
 209      00000000 
 209      00000000 
 209      00000000 
 209      00000000 
 210              		.global	sendDebugArray
 211              		.align	2
 214              	sendDebugArray:
 215 0320 00000000 		.space	160
 215      00000000 
 215      00000000 
 215      00000000 
 215      00000000 
 216              		.global	pack_id
 217              		.align	2
 220              	pack_id:
 221 03c0 00000000 		.space	4
 222              		.global	ballData
 223              		.align	2
 226              	ballData:
 227 03c4 00000000 		.space	28
 227      00000000 
 227      00000000 
 227      00000000 
 227      00000000 
 228              		.global	vicon_count
 229              		.align	2
 232              	vicon_count:
 233 03e0 00000000 		.space	4
 234              		.global	vicon_tp
 235              		.align	2
 238              	vicon_tp:
 239 03e4 00000000 		.space	4
 240              		.global	receive_valid_data_flag
 241              		.align	2
 244              	receive_valid_data_flag:
 245 03e8 00000000 		.space	4
 246              		.global	use_way_point_flag
 247              		.align	2
 250              	use_way_point_flag:
 251 03ec 00000000 		.space	4
 252              		.global	output_thrust
 253              		.data
 254              		.align	2
 257              	output_thrust:
 258 0004 3A070000 		.word	1850
 259              		.global	change_vicon_x
 260              		.bss
 261              		.align	2
 264              	change_vicon_x:
 265 03f0 00000000 		.space	4
 266              		.global	attitude_u
 267              		.align	2
 270              	attitude_u:
 271 03f4 00000000 		.space	4
 272              		.global	my_state
 273              		.align	2
 276              	my_state:
 277 03f8 00000000 		.space	44
 277      00000000 
 277      00000000 
 277      00000000 
 277      00000000 
 278              		.global	my_setpoint
 279              		.data
 280              		.align	2
 283              	my_setpoint:
 284 0008 00000000 		.word	0
 285 000c 00000000 		.word	0
 286 0010 00004844 		.word	1145569280
 287 0014 00000000 		.word	0
 288 0018 00000000 		.word	0
 289 001c 00000000 		.word	0
 290 0020 00000000 		.space	4
 291 0024 00000000 		.word	0
 292 0028 00000000 		.word	0
 293 002c 00000000 		.word	0
 294 0030 00000000 		.space	4
 295              		.bss
 296              		.align	2
 297              	stop_flag.2129:
 298 0424 00000000 		.space	4
 300              		.align	2
 301              	freq.2128:
 302 0428 00000000 		.space	4
 304              		.data
 305              		.align	2
 308              	temp.2127:
 309 0034 01000000 		.word	1
 311              		.global	__floatsisf
 312              		.global	__divsf3
 313              		.global	__mulsf3
 314              		.global	__fixsfsi
 315              		.global	__gtsf2
 316              		.text
 317              		.align	2
 319              		.global	fake_gps3
 321              	fake_gps3:
   1:sdk.c         **** /*
   2:sdk.c         **** 
   3:sdk.c         **** AscTec AutoPilot HL SDK v2.0
   4:sdk.c         **** 
   5:sdk.c         **** Copyright (c) 2011, Ascending Technologies GmbH
   6:sdk.c         **** All rights reserved.
   7:sdk.c         **** 
   8:sdk.c         **** Redistribution and use in source and binary forms, with or without
   9:sdk.c         **** modification, are permitted provided that the following conditions are met:
  10:sdk.c         **** 
  11:sdk.c         ****  * Redistributions of source code must retain the above copyright notice,
  12:sdk.c         ****    this list of conditions and the following disclaimer.
  13:sdk.c         ****  * Redistributions in binary form must reproduce the above copyright
  14:sdk.c         ****    notice, this list of conditions and the following disclaimer in the
  15:sdk.c         ****    documentation and/or other materials provided with the distribution.
  16:sdk.c         **** 
  17:sdk.c         **** THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
  18:sdk.c         **** EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  19:sdk.c         **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  20:sdk.c         **** DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
  21:sdk.c         **** DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  22:sdk.c         **** (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  23:sdk.c         **** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  24:sdk.c         **** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  25:sdk.c         **** LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  26:sdk.c         **** OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  27:sdk.c         **** DAMAGE.
  28:sdk.c         **** 
  29:sdk.c         ****  */
  30:sdk.c         **** 
  31:sdk.c         **** #include "main.h"
  32:sdk.c         **** #include "sdk.h"
  33:sdk.c         **** #include "pid.h"
  34:sdk.c         **** #include "LL_HL_comm.h"
  35:sdk.c         **** #include "gpsmath.h"
  36:sdk.c         **** #include "MyProtocol.h"
  37:sdk.c         **** #include  "common_header.h"
  38:sdk.c         **** #include "position_controller.h"
  39:sdk.c         **** 
  40:sdk.c         **** 
  41:sdk.c         **** #define SET_PARAM_MODE
  42:sdk.c         **** #define NORMAL_MODE
  43:sdk.c         **** 
  44:sdk.c         **** struct WO_SDK_STRUCT WO_SDK;
  45:sdk.c         **** struct WO_CTRL_INPUT WO_CTRL_Input;
  46:sdk.c         **** struct RO_RC_DATA RO_RC_Data;
  47:sdk.c         **** struct RO_ALL_DATA RO_ALL_Data;
  48:sdk.c         **** struct WO_DIRECT_MOTOR_CONTROL WO_Direct_Motor_Control;
  49:sdk.c         **** struct WO_DIRECT_INDIVIDUAL_MOTOR_CONTROL WO_Direct_Individual_Motor_Control;
  50:sdk.c         **** 
  51:sdk.c         **** //extern struct IMU_CALCDATA IMU_CalcData;
  52:sdk.c         **** void SDK_EXAMPLE_direct_individual_motor_commands(void);
  53:sdk.c         **** void SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping(void);
  54:sdk.c         **** void SDK_EXAMPLE_attitude_commands(void);
  55:sdk.c         **** void SDK_EXAMPLE_gps_waypoint_control(void);
  56:sdk.c         **** int SDK_EXAMPLE_turn_motors_on(void);
  57:sdk.c         **** int SDK_EXAMPLE_turn_motors_off(void);
  58:sdk.c         **** 
  59:sdk.c         **** void fake_gps3(void );
  60:sdk.c         **** 
  61:sdk.c         **** unsigned char allDataBuffer[400]={0};
  62:sdk.c         **** MyViconData receivedViconData={0};
  63:sdk.c         **** DebugData sendDebugData={0};
  64:sdk.c         **** DebugData receiveDebugData={0};
  65:sdk.c         **** ParamDebug sendParamDebug={0};
  66:sdk.c         **** ParamDebug receiveParamDebug={0};
  67:sdk.c         **** PositionWayPointData sendPositionWayPointData={0};
  68:sdk.c         **** PositionWayPointData receivePositionWayPointData={0};
  69:sdk.c         **** LandSignal sendLandSignal={LAND_MODE_NONE};
  70:sdk.c         **** LandSignal receiveLandSignal={LAND_MODE_NONE};
  71:sdk.c         **** extern struct this_s my_this;
  72:sdk.c         **** CmdData receiveCmdData={PACKAGE_DEFINE_DEBUG};
  73:sdk.c         **** NormalData sendNormalData={0};
  74:sdk.c         **** NormalData receiveNormalData={0};
  75:sdk.c         **** DebugArray sendDebugArray={{0},{0}};
  76:sdk.c         **** int pack_id=0;
  77:sdk.c         **** 
  78:sdk.c         **** BallData ballData={0};
  79:sdk.c         **** //ParamDebug paramDebug={0};
  80:sdk.c         **** int vicon_count=0;
  81:sdk.c         **** int vicon_tp=0;
  82:sdk.c         **** float calc_thrust;
  83:sdk.c         **** float calc_pitch;
  84:sdk.c         **** float calc_roll;
  85:sdk.c         **** int receive_valid_data_flag=0;
  86:sdk.c         **** int use_way_point_flag=0;
  87:sdk.c         **** volatile int output_thrust=1850;
  88:sdk.c         **** float change_vicon_x=0;
  89:sdk.c         **** int attitude_u=0;
  90:sdk.c         **** state_t my_state={
  91:sdk.c         **** 		.position={
  92:sdk.c         **** 				.x=0,
  93:sdk.c         **** 				.y=0,
  94:sdk.c         **** 				.z=0,
  95:sdk.c         **** 		},
  96:sdk.c         **** 		.velocity={
  97:sdk.c         **** 				.x=0,
  98:sdk.c         **** 				.y=0,
  99:sdk.c         **** 				.z=0
 100:sdk.c         **** 		},
 101:sdk.c         **** 		.attitude={
 102:sdk.c         **** 				.pitch=0,
 103:sdk.c         **** 				.roll=0,
 104:sdk.c         **** 				.yaw=0,
 105:sdk.c         **** 		}
 106:sdk.c         **** };
 107:sdk.c         **** state_t my_setpoint={
 108:sdk.c         **** 		.position={
 109:sdk.c         **** 				.x=0,
 110:sdk.c         **** 				.y=0,
 111:sdk.c         **** 				.z=800,
 112:sdk.c         **** 		},
 113:sdk.c         **** 		.velocity={
 114:sdk.c         **** 				.x=0,
 115:sdk.c         **** 				.y=0,
 116:sdk.c         **** 				.z=0,
 117:sdk.c         **** 		},
 118:sdk.c         **** 		.attitude={
 119:sdk.c         **** 				.pitch=0,
 120:sdk.c         **** 				.roll=0,
 121:sdk.c         **** 				.yaw=0,
 122:sdk.c         **** 		}
 123:sdk.c         **** };
 124:sdk.c         **** void fake_gps3(void ){
 323              	.LM0:
 324              		@ Function supports interworking.
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327 0000 0DC0A0E1 		mov	ip, sp
 328 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 329 0008 04B04CE2 		sub	fp, ip, #4
 125:sdk.c         **** 	static int temp=1;
 126:sdk.c         **** 	static int freq=0;
 127:sdk.c         **** 	static int stop_flag=0;
 128:sdk.c         **** 
 129:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;
 331              	.LM1:
 332 000c 04239FE5 		ldr	r2, .L18
 333 0010 0230A0E3 		mov	r3, #2
 334 0014 0030C2E5 		strb	r3, [r2, #0]
 130:sdk.c         **** 	WO_SDK.ctrl_enabled=1;
 336              	.LM2:
 337 0018 F8229FE5 		ldr	r2, .L18
 338 001c 0130A0E3 		mov	r3, #1
 339 0020 0130C2E5 		strb	r3, [r2, #1]
 131:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0;
 341              	.LM3:
 342 0024 EC229FE5 		ldr	r2, .L18
 343 0028 0030A0E3 		mov	r3, #0
 344 002c 0230C2E5 		strb	r3, [r2, #2]
 132:sdk.c         **** 	//WO_CTRL_Input.ctrl=0x0F;
 133:sdk.c         **** 	WO_CTRL_Input.ctrl=0x0F;
 346              	.LM4:
 347 0030 E4229FE5 		ldr	r2, .L18+4
 348 0034 0F30A0E3 		mov	r3, #15
 349 0038 B830C2E1 		strh	r3, [r2, #8]	@ movhi
 134:sdk.c         **** 
 135:sdk.c         **** 	if(temp==1){
 351              	.LM5:
 352 003c DC329FE5 		ldr	r3, .L18+8
 353 0040 003093E5 		ldr	r3, [r3, #0]
 354 0044 010053E3 		cmp	r3, #1
 355 0048 1300001A 		bne	.L2
 136:sdk.c         **** 		temp=0;
 357              	.LM6:
 358 004c CC229FE5 		ldr	r2, .L18+8
 359 0050 0030A0E3 		mov	r3, #0
 360 0054 003082E5 		str	r3, [r2, #0]
 137:sdk.c         **** 		positionControllerInit();
 362              	.LM7:
 363 0058 FEFFFFEB 		bl	positionControllerInit
 138:sdk.c         **** 		my_this.pidVZ.setpoint=(float)RO_ALL_Data.angle_yaw/1000.0f*DEG_TO_RAD;
 365              	.LM8:
 366 005c C0329FE5 		ldr	r3, .L18+12
 367 0060 183093E5 		ldr	r3, [r3, #24]
 368 0064 0300A0E1 		mov	r0, r3
 369 0068 FEFFFFEB 		bl	__floatsisf
 370 006c 0030A0E1 		mov	r3, r0
 371 0070 0300A0E1 		mov	r0, r3
 372 0074 AC129FE5 		ldr	r1, .L18+16	@ float
 373 0078 FEFFFFEB 		bl	__divsf3
 374 007c 0030A0E1 		mov	r3, r0
 375 0080 0300A0E1 		mov	r0, r3
 376 0084 A0129FE5 		ldr	r1, .L18+20	@ float
 377 0088 FEFFFFEB 		bl	__mulsf3
 378 008c 0030A0E1 		mov	r3, r0
 379 0090 0320A0E1 		mov	r2, r3
 380 0094 94329FE5 		ldr	r3, .L18+24
 381 0098 442083E5 		str	r2, [r3, #68]	@ float
 382              	.L2:
 139:sdk.c         **** 	}
 140:sdk.c         **** 	if(freq++>=10){
 384              	.LM9:
 385 009c 90329FE5 		ldr	r3, .L18+28
 386 00a0 002093E5 		ldr	r2, [r3, #0]
 387 00a4 090052E3 		cmp	r2, #9
 388 00a8 0030A0D3 		movle	r3, #0
 389 00ac 0130A0C3 		movgt	r3, #1
 390 00b0 FF1003E2 		and	r1, r3, #255
 391 00b4 012082E2 		add	r2, r2, #1
 392 00b8 74329FE5 		ldr	r3, .L18+28
 393 00bc 002083E5 		str	r2, [r3, #0]
 394 00c0 000051E3 		cmp	r1, #0
 395 00c4 2700000A 		beq	.L4
 141:sdk.c         **** 		freq=1;
 397              	.LM10:
 398 00c8 64229FE5 		ldr	r2, .L18+28
 399 00cc 0130A0E3 		mov	r3, #1
 400 00d0 003082E5 		str	r3, [r2, #0]
 142:sdk.c         **** 		my_state.attitude.pitch=(float)RO_ALL_Data.angle_pitch/1000.0f*DEG_TO_RAD;
 402              	.LM11:
 403 00d4 48329FE5 		ldr	r3, .L18+12
 404 00d8 103093E5 		ldr	r3, [r3, #16]
 405 00dc 0300A0E1 		mov	r0, r3
 406 00e0 FEFFFFEB 		bl	__floatsisf
 407 00e4 0030A0E1 		mov	r3, r0
 408 00e8 0300A0E1 		mov	r0, r3
 409 00ec 34129FE5 		ldr	r1, .L18+16	@ float
 410 00f0 FEFFFFEB 		bl	__divsf3
 411 00f4 0030A0E1 		mov	r3, r0
 412 00f8 0300A0E1 		mov	r0, r3
 413 00fc 28129FE5 		ldr	r1, .L18+20	@ float
 414 0100 FEFFFFEB 		bl	__mulsf3
 415 0104 0030A0E1 		mov	r3, r0
 416 0108 0320A0E1 		mov	r2, r3
 417 010c 24329FE5 		ldr	r3, .L18+32
 418 0110 202083E5 		str	r2, [r3, #32]	@ float
 143:sdk.c         **** 		my_state.attitude.roll=(float)RO_ALL_Data.angle_roll/1000.0f*DEG_TO_RAD;
 420              	.LM12:
 421 0114 08329FE5 		ldr	r3, .L18+12
 422 0118 143093E5 		ldr	r3, [r3, #20]
 423 011c 0300A0E1 		mov	r0, r3
 424 0120 FEFFFFEB 		bl	__floatsisf
 425 0124 0030A0E1 		mov	r3, r0
 426 0128 0300A0E1 		mov	r0, r3
 427 012c F4119FE5 		ldr	r1, .L18+16	@ float
 428 0130 FEFFFFEB 		bl	__divsf3
 429 0134 0030A0E1 		mov	r3, r0
 430 0138 0300A0E1 		mov	r0, r3
 431 013c E8119FE5 		ldr	r1, .L18+20	@ float
 432 0140 FEFFFFEB 		bl	__mulsf3
 433 0144 0030A0E1 		mov	r3, r0
 434 0148 0320A0E1 		mov	r2, r3
 435 014c E4319FE5 		ldr	r3, .L18+32
 436 0150 1C2083E5 		str	r2, [r3, #28]	@ float
 144:sdk.c         **** 		//my_state.attitude.yaw=(float)RO_ALL_Data.angle_yaw/1000.0f*DEG_TO_RAD;
 145:sdk.c         **** 		positionController(&calc_thrust,&calc_pitch,&calc_roll,&my_state);
 438              	.LM13:
 439 0154 E0019FE5 		ldr	r0, .L18+36
 440 0158 E0119FE5 		ldr	r1, .L18+40
 441 015c E0219FE5 		ldr	r2, .L18+44
 442 0160 D0319FE5 		ldr	r3, .L18+32
 443 0164 FEFFFFEB 		bl	positionController
 444              	.L4:
 146:sdk.c         **** 	}
 147:sdk.c         **** 	if(receiveLandSignal.mode==LAND_MODE_NONE){
 446              	.LM14:
 447 0168 D8319FE5 		ldr	r3, .L18+48
 448 016c 003093E5 		ldr	r3, [r3, #0]
 449 0170 000053E3 		cmp	r3, #0
 450 0174 2200001A 		bne	.L6
 148:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0F;
 452              	.LM15:
 453 0178 9C219FE5 		ldr	r2, .L18+4
 454 017c 0F30A0E3 		mov	r3, #15
 455 0180 B830C2E1 		strh	r3, [r2, #8]	@ movhi
 149:sdk.c         **** 		output_thrust=calc_thrust;
 457              	.LM16:
 458 0184 B0319FE5 		ldr	r3, .L18+36
 459 0188 003093E5 		ldr	r3, [r3, #0]	@ float
 460 018c 0300A0E1 		mov	r0, r3
 461 0190 FEFFFFEB 		bl	__fixsfsi
 462 0194 0020A0E1 		mov	r2, r0
 463 0198 AC319FE5 		ldr	r3, .L18+52
 464 019c 002083E5 		str	r2, [r3, #0]
 150:sdk.c         **** 		WO_CTRL_Input.thrust=output_thrust;
 466              	.LM17:
 467 01a0 A4319FE5 		ldr	r3, .L18+52
 468 01a4 003093E5 		ldr	r3, [r3, #0]
 469 01a8 0338A0E1 		mov	r3, r3, asl #16
 470 01ac 2328A0E1 		mov	r2, r3, lsr #16
 471 01b0 64319FE5 		ldr	r3, .L18+4
 472 01b4 B620C3E1 		strh	r2, [r3, #6]	@ movhi
 151:sdk.c         **** 		WO_CTRL_Input.pitch=calc_pitch;
 474              	.LM18:
 475 01b8 80319FE5 		ldr	r3, .L18+40
 476 01bc 003093E5 		ldr	r3, [r3, #0]	@ float
 477 01c0 0300A0E1 		mov	r0, r3
 478 01c4 FEFFFFEB 		bl	__fixsfsi
 479 01c8 0030A0E1 		mov	r3, r0
 480 01cc 0338A0E1 		mov	r3, r3, asl #16
 481 01d0 2328A0E1 		mov	r2, r3, lsr #16
 482 01d4 40319FE5 		ldr	r3, .L18+4
 483 01d8 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 152:sdk.c         **** 		WO_CTRL_Input.roll=calc_roll;
 485              	.LM19:
 486 01dc 60319FE5 		ldr	r3, .L18+44
 487 01e0 003093E5 		ldr	r3, [r3, #0]	@ float
 488 01e4 0300A0E1 		mov	r0, r3
 489 01e8 FEFFFFEB 		bl	__fixsfsi
 490 01ec 0030A0E1 		mov	r3, r0
 491 01f0 0338A0E1 		mov	r3, r3, asl #16
 492 01f4 2328A0E1 		mov	r2, r3, lsr #16
 493 01f8 1C319FE5 		ldr	r3, .L18+4
 494 01fc B220C3E1 		strh	r2, [r3, #2]	@ movhi
 495 0200 410000EA 		b	.L17
 496              	.L6:
 153:sdk.c         **** 	}else if(receiveLandSignal.mode==LAND_MODE_SLOW){
 498              	.LM20:
 499 0204 3C319FE5 		ldr	r3, .L18+48
 500 0208 003093E5 		ldr	r3, [r3, #0]
 501 020c 010053E3 		cmp	r3, #1
 502 0210 3D00001A 		bne	.L17
 154:sdk.c         **** 		stop_flag++;
 504              	.LM21:
 505 0214 34319FE5 		ldr	r3, .L18+56
 506 0218 003093E5 		ldr	r3, [r3, #0]
 507 021c 012083E2 		add	r2, r3, #1
 508 0220 28319FE5 		ldr	r3, .L18+56
 509 0224 002083E5 		str	r2, [r3, #0]
 155:sdk.c         **** 		if(my_state.position.z>200){
 511              	.LM22:
 512 0228 08319FE5 		ldr	r3, .L18+32
 513 022c 083093E5 		ldr	r3, [r3, #8]	@ float
 514 0230 0300A0E1 		mov	r0, r3
 515 0234 18119FE5 		ldr	r1, .L18+60	@ float
 516 0238 FEFFFFEB 		bl	__gtsf2
 517 023c 0030A0E1 		mov	r3, r0
 518 0240 000053E3 		cmp	r3, #0
 519 0244 000000CA 		bgt	.L12
 520 0248 0D0000EA 		b	.L10
 521              	.L12:
 156:sdk.c         **** 			my_setpoint.position.z=-150;
 523              	.LM23:
 524 024c 04219FE5 		ldr	r2, .L18+64
 525 0250 04319FE5 		ldr	r3, .L18+68	@ float
 526 0254 083082E5 		str	r3, [r2, #8]	@ float
 157:sdk.c         **** 			my_this.thrustBase=1700;
 528              	.LM24:
 529 0258 D0209FE5 		ldr	r2, .L18+24
 530 025c 721FA0E3 		mov	r1, #456
 531 0260 6A3EA0E3 		mov	r3, #1696
 532 0264 043083E2 		add	r3, r3, #4
 533 0268 B13082E1 		strh	r3, [r2, r1]	@ movhi
 158:sdk.c         **** 			WO_CTRL_Input.thrust=output_thrust;
 535              	.LM25:
 536 026c D8309FE5 		ldr	r3, .L18+52
 537 0270 003093E5 		ldr	r3, [r3, #0]
 538 0274 0338A0E1 		mov	r3, r3, asl #16
 539 0278 2328A0E1 		mov	r2, r3, lsr #16
 540 027c 98309FE5 		ldr	r3, .L18+4
 541 0280 B620C3E1 		strh	r2, [r3, #6]	@ movhi
 542              	.L10:
 159:sdk.c         **** 		}
 160:sdk.c         **** 		if(stop_flag>4000){
 544              	.LM26:
 545 0284 C4309FE5 		ldr	r3, .L18+56
 546 0288 003093E5 		ldr	r3, [r3, #0]
 547 028c FA0E53E3 		cmp	r3, #4000
 548 0290 020000DA 		ble	.L13
 161:sdk.c         **** 			WO_CTRL_Input.thrust=1600;
 550              	.LM27:
 551 0294 80309FE5 		ldr	r3, .L18+4
 552 0298 192DA0E3 		mov	r2, #1600
 553 029c B620C3E1 		strh	r2, [r3, #6]	@ movhi
 554              	.L13:
 162:sdk.c         **** 		}
 163:sdk.c         **** 		if(stop_flag>6000){
 556              	.LM28:
 557 02a0 A8309FE5 		ldr	r3, .L18+56
 558 02a4 002093E5 		ldr	r2, [r3, #0]
 559 02a8 5D3DA0E3 		mov	r3, #5952
 560 02ac 303083E2 		add	r3, r3, #48
 561 02b0 030052E1 		cmp	r2, r3
 562 02b4 020000DA 		ble	.L15
 164:sdk.c         **** 			WO_CTRL_Input.thrust=0;
 564              	.LM29:
 565 02b8 5C309FE5 		ldr	r3, .L18+4
 566 02bc 0020A0E3 		mov	r2, #0
 567 02c0 B620C3E1 		strh	r2, [r3, #6]	@ movhi
 568              	.L15:
 165:sdk.c         **** 		}
 166:sdk.c         **** 		//WO_CTRL_Input.thrust=0;
 167:sdk.c         **** 		//WO_CTRL_Input.yaw=2047;
 168:sdk.c         **** 		WO_CTRL_Input.pitch=calc_pitch;
 570              	.LM30:
 571 02c4 74309FE5 		ldr	r3, .L18+40
 572 02c8 003093E5 		ldr	r3, [r3, #0]	@ float
 573 02cc 0300A0E1 		mov	r0, r3
 574 02d0 FEFFFFEB 		bl	__fixsfsi
 575 02d4 0030A0E1 		mov	r3, r0
 576 02d8 0338A0E1 		mov	r3, r3, asl #16
 577 02dc 2328A0E1 		mov	r2, r3, lsr #16
 578 02e0 34309FE5 		ldr	r3, .L18+4
 579 02e4 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 169:sdk.c         **** 		WO_CTRL_Input.roll=calc_roll;
 581              	.LM31:
 582 02e8 54309FE5 		ldr	r3, .L18+44
 583 02ec 003093E5 		ldr	r3, [r3, #0]	@ float
 584 02f0 0300A0E1 		mov	r0, r3
 585 02f4 FEFFFFEB 		bl	__fixsfsi
 586 02f8 0030A0E1 		mov	r3, r0
 587 02fc 0338A0E1 		mov	r3, r3, asl #16
 588 0300 2328A0E1 		mov	r2, r3, lsr #16
 589 0304 10309FE5 		ldr	r3, .L18+4
 590 0308 B220C3E1 		strh	r2, [r3, #2]	@ movhi
 591              	.L17:
 170:sdk.c         **** 	}
 171:sdk.c         **** 
 172:sdk.c         **** }
 593              	.LM32:
 594 030c 0CD04BE2 		sub	sp, fp, #12
 595 0310 00689DE8 		ldmfd	sp, {fp, sp, lr}
 596 0314 1EFF2FE1 		bx	lr
 597              	.L19:
 598              		.align	2
 599              	.L18:
 600 0318 00000000 		.word	WO_SDK
 601 031c 00000000 		.word	WO_CTRL_Input
 602 0320 34000000 		.word	temp.2127
 603 0324 00000000 		.word	RO_ALL_Data
 604 0328 00007A44 		.word	1148846080
 605 032c 35FA8E3C 		.word	1016003125
 606 0330 00000000 		.word	my_this
 607 0334 28040000 		.word	freq.2128
 608 0338 00000000 		.word	my_state
 609 033c 00000000 		.word	calc_thrust
 610 0340 00000000 		.word	calc_pitch
 611 0344 00000000 		.word	calc_roll
 612 0348 00000000 		.word	receiveLandSignal
 613 034c 00000000 		.word	output_thrust
 614 0350 24040000 		.word	stop_flag.2129
 615 0354 00004843 		.word	1128792064
 616 0358 00000000 		.word	my_setpoint
 617 035c 000016C3 		.word	-1021968384
 624              	.Lscope0:
 625              		.align	2
 627              		.global	SDK_mainloop
 629              	SDK_mainloop:
 173:sdk.c         **** /* SDK_mainloop(void) is triggered @ 1kHz.
 174:sdk.c         ****  *
 175:sdk.c         ****  * RO_(Read Only) data is updated before entering this function
 176:sdk.c         ****  * and can be read to obtain information for supervision or control
 177:sdk.c         ****  *
 178:sdk.c         ****  * WO_(Write Only) data is written to the LL processor after
 179:sdk.c         ****  * execution of this function.
 180:sdk.c         ****  *
 181:sdk.c         ****  * WO_ and RO_ structs are defined in sdk.h
 182:sdk.c         ****  *
 183:sdk.c         ****  * The struct RO_ALL_Data (defined in sdk.h)
 184:sdk.c         ****  * is used to read all sensor data, results of the data fusion
 185:sdk.c         ****  * and R/C inputs transmitted from the LL-processor. This struct is
 186:sdk.c         ****  * automatically updated at 1 kHz.
 187:sdk.c         ****  * */
 188:sdk.c         **** 
 189:sdk.c         **** /* How to flash the high level processor
 190:sdk.c         ****  *
 191:sdk.c         ****  * The easiest way to get your code on the high level processor is to use the JTAG-adapter.
 192:sdk.c         ****  *
 193:sdk.c         ****  * It needs three steps to get your code on the high level processor.
 194:sdk.c         ****  * 1. Build your code ("Build Project")
 195:sdk.c         ****  * 2. Connect your JTAG adapter and start the JTAG connection ("OpenOCD Asctec-JTAG")
 196:sdk.c         ****  * 3. Flash the processor ("Asctec JTAG Debug")
 197:sdk.c         ****  *
 198:sdk.c         ****  * In the menu "Run -> External Tools -> External Tools Configuration..." you
 199:sdk.c         ****  * will find "OpenOCD Asctec-JTAG". If the JTAG connection was activated
 200:sdk.c         ****  * correctly, the console will show only the following line:
 201:sdk.c         ****  * "Info:    openocd.c:92 main(): Open On-Chip Debugger (2007-08-10 22:30 CEST)"
 202:sdk.c         ****  *
 203:sdk.c         ****  * Do not launch more than ONE JTAG-connection at the same time!
 204:sdk.c         ****  *
 205:sdk.c         ****  * In the menu "Run -> Debug Configurations..." you will find "Asctec JTAG Debug"
 206:sdk.c         ****  * If the code was successfully flashed on the processor, the program will switch
 207:sdk.c         ****  * to the Debug window.
 208:sdk.c         ****  *************
 209:sdk.c         ****  * If you want to flash the high level processor using a serial interface (AscTec USB adapter)
 210:sdk.c         ****  * and bootloader software like "Flash Magic", you need to change
 211:sdk.c         ****  * the following in the "makefile" (line 113):
 212:sdk.c         ****  *
 213:sdk.c         ****  * FORMAT = ihex
 214:sdk.c         ****  * #FORMAT = binary
 215:sdk.c         ****  *
 216:sdk.c         ****  * After buidling your code you will find the main.hex in your workspace folder.
 217:sdk.c         ****  *************
 218:sdk.c         ****  * */
 219:sdk.c         **** 
 220:sdk.c         **** /* After flashing the HL, your code can be debugged online. The ARM7 supports ONE hardware breakpoi
 221:sdk.c         ****  * You can monitor the CPU-load by looking at HL_Status.cpu_load. As long as this value is 1000 you
 222:sdk.c         ****  * code in SDK_mainloop() is executed at 1 kHz.
 223:sdk.c         ****  *
 224:sdk.c         ****  * To activate the SDK controls, the serial interface switch on your R/C (channel 5) needs to be in
 225:sdk.c         ****  *
 226:sdk.c         ****  * If your project needs communication over a serial link, you find an example of how to do so in m
 227:sdk.c         ****  * All sample functions for transmitting and receiving data over the UART (HL_serial_0) are in uart
 228:sdk.c         ****  * these examples to code your own communication state machine.
 229:sdk.c         ****  */
 230:sdk.c         **** 
 231:sdk.c         **** 
 232:sdk.c         **** void SDK_mainloop(void) //write your own code within this function
 233:sdk.c         **** {
 631              	.LM33:
 632              		@ Function supports interworking.
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635 0360 0DC0A0E1 		mov	ip, sp
 636 0364 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 637 0368 04B04CE2 		sub	fp, ip, #4
 234:sdk.c         **** 
 235:sdk.c         **** 
 236:sdk.c         **** 	//you can select an example by using ONE of the functions below.
 237:sdk.c         **** 	//CAUTION! Read the code of the examples before you test them on your UAV!
 238:sdk.c         **** 
 239:sdk.c         **** 	//SDK_EXAMPLE_direct_individual_motor_commands();
 240:sdk.c         **** 	//SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping();
 241:sdk.c         **** 	//SDK_EXAMPLE_attitude_commands();
 242:sdk.c         **** 	//SDK_EXAMPLE_gps_waypoint_control();
 243:sdk.c         **** 
 244:sdk.c         **** 	//example to turn motors on and off every 2 seconds
 245:sdk.c         **** 	/*
 246:sdk.c         ****  	static int timer=0;
 247:sdk.c         **** 	if(++timer<1000) SDK_EXAMPLE_turn_motors_on();
 248:sdk.c         **** 	else if(timer<2000) SDK_EXAMPLE_turn_motors_off();
 249:sdk.c         **** 	else timer=0;
 250:sdk.c         **** 	*/
 251:sdk.c         **** 	fake_gps3();
 639              	.LM34:
 640 036c FEFFFFEB 		bl	fake_gps3
 252:sdk.c         **** }
 642              	.LM35:
 643 0370 0CD04BE2 		sub	sp, fp, #12
 644 0374 00689DE8 		ldmfd	sp, {fp, sp, lr}
 645 0378 1EFF2FE1 		bx	lr
 647              	.Lscope1:
 648              		.align	2
 650              		.global	SDK_EXAMPLE_direct_individual_motor_commands
 652              	SDK_EXAMPLE_direct_individual_motor_commands:
 253:sdk.c         **** 
 254:sdk.c         **** /* the following example shows the direct motor command usage by mapping the stick directly to the 
 255:sdk.c         ****  *
 256:sdk.c         ****  */
 257:sdk.c         **** void SDK_EXAMPLE_direct_individual_motor_commands(void)
 258:sdk.c         **** {
 654              	.LM36:
 655              		@ Function supports interworking.
 656              		@ args = 0, pretend = 0, frame = 4
 657              		@ frame_needed = 1, uses_anonymous_args = 0
 658 037c 0DC0A0E1 		mov	ip, sp
 659 0380 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 660 0384 04B04CE2 		sub	fp, ip, #4
 661 0388 04D04DE2 		sub	sp, sp, #4
 259:sdk.c         **** 
 260:sdk.c         **** 	WO_SDK.ctrl_mode=0x00;	//0x00: direct individual motor control: individual commands for motors 0..
 663              	.LM37:
 664 038c E0219FE5 		ldr	r2, .L31
 665 0390 0030A0E3 		mov	r3, #0
 666 0394 0030C2E5 		strb	r3, [r2, #0]
 261:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 262:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 263:sdk.c         **** 							//0x03: GPS waypoint control
 264:sdk.c         **** 
 265:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 668              	.LM38:
 669 0398 D4219FE5 		ldr	r2, .L31
 670 039c 0130A0E3 		mov	r3, #1
 671 03a0 0130C2E5 		strb	r3, [r2, #1]
 266:sdk.c         **** 							//1: enable control by HL processor
 267:sdk.c         **** 
 268:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0;
 673              	.LM39:
 674 03a4 C8219FE5 		ldr	r2, .L31
 675 03a8 0030A0E3 		mov	r3, #0
 676 03ac 0230C2E5 		strb	r3, [r2, #2]
 269:sdk.c         **** 
 270:sdk.c         **** 	unsigned int i;
 271:sdk.c         **** 
 272:sdk.c         **** 	//scale throttle stick to [0..200] and map it to all motors
 273:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[0]=RO_ALL_Data.channel[2]/21;
 678              	.LM40:
 679 03b0 C0319FE5 		ldr	r3, .L31+4
 680 03b4 B420D3E1 		ldrh	r2, [r3, #4]
 681 03b8 BC319FE5 		ldr	r3, .L31+8
 682 03bc 930281E0 		umull	r0, r1, r3, r2
 683 03c0 023061E0 		rsb	r3, r1, r2
 684 03c4 A330A0E1 		mov	r3, r3, lsr #1
 685 03c8 033081E0 		add	r3, r1, r3
 686 03cc 2332A0E1 		mov	r3, r3, lsr #4
 687 03d0 0338A0E1 		mov	r3, r3, asl #16
 688 03d4 2338A0E1 		mov	r3, r3, lsr #16
 689 03d8 FF3003E2 		and	r3, r3, #255
 690 03dc 9C219FE5 		ldr	r2, .L31+12
 691 03e0 0030C2E5 		strb	r3, [r2, #0]
 274:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[1]=RO_ALL_Data.channel[2]/21;
 693              	.LM41:
 694 03e4 8C319FE5 		ldr	r3, .L31+4
 695 03e8 B420D3E1 		ldrh	r2, [r3, #4]
 696 03ec 88319FE5 		ldr	r3, .L31+8
 697 03f0 930281E0 		umull	r0, r1, r3, r2
 698 03f4 023061E0 		rsb	r3, r1, r2
 699 03f8 A330A0E1 		mov	r3, r3, lsr #1
 700 03fc 033081E0 		add	r3, r1, r3
 701 0400 2332A0E1 		mov	r3, r3, lsr #4
 702 0404 0338A0E1 		mov	r3, r3, asl #16
 703 0408 2338A0E1 		mov	r3, r3, lsr #16
 704 040c FF3003E2 		and	r3, r3, #255
 705 0410 68219FE5 		ldr	r2, .L31+12
 706 0414 0130C2E5 		strb	r3, [r2, #1]
 275:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[2]=RO_ALL_Data.channel[2]/21;
 708              	.LM42:
 709 0418 58319FE5 		ldr	r3, .L31+4
 710 041c B420D3E1 		ldrh	r2, [r3, #4]
 711 0420 54319FE5 		ldr	r3, .L31+8
 712 0424 930281E0 		umull	r0, r1, r3, r2
 713 0428 023061E0 		rsb	r3, r1, r2
 714 042c A330A0E1 		mov	r3, r3, lsr #1
 715 0430 033081E0 		add	r3, r1, r3
 716 0434 2332A0E1 		mov	r3, r3, lsr #4
 717 0438 0338A0E1 		mov	r3, r3, asl #16
 718 043c 2338A0E1 		mov	r3, r3, lsr #16
 719 0440 FF3003E2 		and	r3, r3, #255
 720 0444 34219FE5 		ldr	r2, .L31+12
 721 0448 0230C2E5 		strb	r3, [r2, #2]
 276:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[3]=RO_ALL_Data.channel[2]/21;
 723              	.LM43:
 724 044c 24319FE5 		ldr	r3, .L31+4
 725 0450 B420D3E1 		ldrh	r2, [r3, #4]
 726 0454 20319FE5 		ldr	r3, .L31+8
 727 0458 930281E0 		umull	r0, r1, r3, r2
 728 045c 023061E0 		rsb	r3, r1, r2
 729 0460 A330A0E1 		mov	r3, r3, lsr #1
 730 0464 033081E0 		add	r3, r1, r3
 731 0468 2332A0E1 		mov	r3, r3, lsr #4
 732 046c 0338A0E1 		mov	r3, r3, asl #16
 733 0470 2338A0E1 		mov	r3, r3, lsr #16
 734 0474 FF3003E2 		and	r3, r3, #255
 735 0478 00219FE5 		ldr	r2, .L31+12
 736 047c 0330C2E5 		strb	r3, [r2, #3]
 277:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[4]=RO_ALL_Data.channel[2]/21;
 738              	.LM44:
 739 0480 F0309FE5 		ldr	r3, .L31+4
 740 0484 B420D3E1 		ldrh	r2, [r3, #4]
 741 0488 EC309FE5 		ldr	r3, .L31+8
 742 048c 930281E0 		umull	r0, r1, r3, r2
 743 0490 023061E0 		rsb	r3, r1, r2
 744 0494 A330A0E1 		mov	r3, r3, lsr #1
 745 0498 033081E0 		add	r3, r1, r3
 746 049c 2332A0E1 		mov	r3, r3, lsr #4
 747 04a0 0338A0E1 		mov	r3, r3, asl #16
 748 04a4 2338A0E1 		mov	r3, r3, lsr #16
 749 04a8 FF3003E2 		and	r3, r3, #255
 750 04ac CC209FE5 		ldr	r2, .L31+12
 751 04b0 0430C2E5 		strb	r3, [r2, #4]
 278:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[5]=RO_ALL_Data.channel[2]/21;
 753              	.LM45:
 754 04b4 BC309FE5 		ldr	r3, .L31+4
 755 04b8 B420D3E1 		ldrh	r2, [r3, #4]
 756 04bc B8309FE5 		ldr	r3, .L31+8
 757 04c0 930281E0 		umull	r0, r1, r3, r2
 758 04c4 023061E0 		rsb	r3, r1, r2
 759 04c8 A330A0E1 		mov	r3, r3, lsr #1
 760 04cc 033081E0 		add	r3, r1, r3
 761 04d0 2332A0E1 		mov	r3, r3, lsr #4
 762 04d4 0338A0E1 		mov	r3, r3, asl #16
 763 04d8 2338A0E1 		mov	r3, r3, lsr #16
 764 04dc FF3003E2 		and	r3, r3, #255
 765 04e0 98209FE5 		ldr	r2, .L31+12
 766 04e4 0530C2E5 		strb	r3, [r2, #5]
 279:sdk.c         **** 
 280:sdk.c         **** 	//make sure commands are never 0 so that motors will always keep spinning
 281:sdk.c         ****     //also make sure that commands stay within range
 282:sdk.c         ****     for(i=0;i<6;i++)
 768              	.LM46:
 769 04e8 0030A0E3 		mov	r3, #0
 770 04ec 10300BE5 		str	r3, [fp, #-16]
 771 04f0 190000EA 		b	.L23
 772              	.L24:
 283:sdk.c         ****     {
 284:sdk.c         ****     	if(!WO_Direct_Individual_Motor_Control.motor[i]) WO_Direct_Individual_Motor_Control.motor[i]=1
 774              	.LM47:
 775 04f4 10201BE5 		ldr	r2, [fp, #-16]
 776 04f8 80309FE5 		ldr	r3, .L31+12
 777 04fc 023083E0 		add	r3, r3, r2
 778 0500 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 779 0504 000053E3 		cmp	r3, #0
 780 0508 0500001A 		bne	.L25
 781 050c 10201BE5 		ldr	r2, [fp, #-16]
 782 0510 68309FE5 		ldr	r3, .L31+12
 783 0514 022083E0 		add	r2, r3, r2
 784 0518 0130A0E3 		mov	r3, #1
 785 051c 0030C2E5 		strb	r3, [r2, #0]
 786 0520 0A0000EA 		b	.L27
 787              	.L25:
 285:sdk.c         ****     	else if (WO_Direct_Individual_Motor_Control.motor[i]>200) WO_Direct_Individual_Motor_Control.m
 789              	.LM48:
 790 0524 10201BE5 		ldr	r2, [fp, #-16]
 791 0528 50309FE5 		ldr	r3, .L31+12
 792 052c 023083E0 		add	r3, r3, r2
 793 0530 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 794 0534 C80053E3 		cmp	r3, #200
 795 0538 0400009A 		bls	.L27
 796 053c 10201BE5 		ldr	r2, [fp, #-16]
 797 0540 38309FE5 		ldr	r3, .L31+12
 798 0544 022083E0 		add	r2, r3, r2
 799 0548 3730E0E3 		mvn	r3, #55
 800 054c 0030C2E5 		strb	r3, [r2, #0]
 801              	.L27:
 282:sdk.c         ****     for(i=0;i<6;i++)
 803              	.LM49:
 804 0550 10301BE5 		ldr	r3, [fp, #-16]
 805 0554 013083E2 		add	r3, r3, #1
 806 0558 10300BE5 		str	r3, [fp, #-16]
 807              	.L23:
 808 055c 10301BE5 		ldr	r3, [fp, #-16]
 809 0560 050053E3 		cmp	r3, #5
 810 0564 E2FFFF9A 		bls	.L24
 286:sdk.c         ****     }
 287:sdk.c         **** }
 812              	.LM50:
 813 0568 0CD04BE2 		sub	sp, fp, #12
 814 056c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 815 0570 1EFF2FE1 		bx	lr
 816              	.L32:
 817              		.align	2
 818              	.L31:
 819 0574 00000000 		.word	WO_SDK
 820 0578 00000000 		.word	RO_ALL_Data
 821 057c 87611886 		.word	-2045222521
 822 0580 00000000 		.word	WO_Direct_Individual_Motor_Control
 827              	.Lscope2:
 828              		.align	2
 830              		.global	SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping
 832              	SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping:
 288:sdk.c         **** 
 289:sdk.c         **** 
 290:sdk.c         **** void SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping(void)
 291:sdk.c         **** {
 834              	.LM51:
 835              		@ Function supports interworking.
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838 0584 0DC0A0E1 		mov	ip, sp
 839 0588 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 840 058c 04B04CE2 		sub	fp, ip, #4
 292:sdk.c         **** 	WO_SDK.ctrl_mode=0x01;	//0x00: direct individual motor control: individual commands for motors 0..
 842              	.LM52:
 843 0590 F4209FE5 		ldr	r2, .L35
 844 0594 0130A0E3 		mov	r3, #1
 845 0598 0030C2E5 		strb	r3, [r2, #0]
 293:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 294:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 295:sdk.c         **** 							//0x03: GPS waypoint control
 296:sdk.c         **** 
 297:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 847              	.LM53:
 848 059c E8209FE5 		ldr	r2, .L35
 849 05a0 0130A0E3 		mov	r3, #1
 850 05a4 0130C2E5 		strb	r3, [r2, #1]
 298:sdk.c         **** 							//1: enable control by HL processor
 299:sdk.c         **** 
 300:sdk.c         **** 	/*
 301:sdk.c         **** 	 *  Stick commands directly mapped to motors, NO attitude control! Do NOT try to fly!
 302:sdk.c         **** 	 * */
 303:sdk.c         **** 
 304:sdk.c         **** 	WO_Direct_Motor_Control.pitch=(4095-RO_ALL_Data.channel[0])/21;
 852              	.LM54:
 853 05a8 E0309FE5 		ldr	r3, .L35+4
 854 05ac B030D3E1 		ldrh	r3, [r3, #0]
 855 05b0 FF2E63E2 		rsb	r2, r3, #4080
 856 05b4 0F2082E2 		add	r2, r2, #15
 857 05b8 C335A0E3 		mov	r3, #817889280
 858 05bc C33B83E2 		add	r3, r3, #199680
 859 05c0 313083E2 		add	r3, r3, #49
 860 05c4 9203C3E0 		smull	r0, r3, r2, r3
 861 05c8 4311A0E1 		mov	r1, r3, asr #2
 862 05cc C23FA0E1 		mov	r3, r2, asr #31
 863 05d0 013063E0 		rsb	r3, r3, r1
 864 05d4 FF3003E2 		and	r3, r3, #255
 865 05d8 B4209FE5 		ldr	r2, .L35+8
 866 05dc 0030C2E5 		strb	r3, [r2, #0]
 305:sdk.c         **** 	WO_Direct_Motor_Control.roll=RO_ALL_Data.channel[1]/21;
 868              	.LM55:
 869 05e0 A8309FE5 		ldr	r3, .L35+4
 870 05e4 B220D3E1 		ldrh	r2, [r3, #2]
 871 05e8 A8309FE5 		ldr	r3, .L35+12
 872 05ec 930281E0 		umull	r0, r1, r3, r2
 873 05f0 023061E0 		rsb	r3, r1, r2
 874 05f4 A330A0E1 		mov	r3, r3, lsr #1
 875 05f8 033081E0 		add	r3, r1, r3
 876 05fc 2332A0E1 		mov	r3, r3, lsr #4
 877 0600 0338A0E1 		mov	r3, r3, asl #16
 878 0604 2338A0E1 		mov	r3, r3, lsr #16
 879 0608 FF3003E2 		and	r3, r3, #255
 880 060c 80209FE5 		ldr	r2, .L35+8
 881 0610 0130C2E5 		strb	r3, [r2, #1]
 306:sdk.c         **** 	WO_Direct_Motor_Control.thrust=RO_ALL_Data.channel[2]/21;
 883              	.LM56:
 884 0614 74309FE5 		ldr	r3, .L35+4
 885 0618 B420D3E1 		ldrh	r2, [r3, #4]
 886 061c 74309FE5 		ldr	r3, .L35+12
 887 0620 930281E0 		umull	r0, r1, r3, r2
 888 0624 023061E0 		rsb	r3, r1, r2
 889 0628 A330A0E1 		mov	r3, r3, lsr #1
 890 062c 033081E0 		add	r3, r1, r3
 891 0630 2332A0E1 		mov	r3, r3, lsr #4
 892 0634 0338A0E1 		mov	r3, r3, asl #16
 893 0638 2338A0E1 		mov	r3, r3, lsr #16
 894 063c FF3003E2 		and	r3, r3, #255
 895 0640 4C209FE5 		ldr	r2, .L35+8
 896 0644 0330C2E5 		strb	r3, [r2, #3]
 307:sdk.c         **** 	WO_Direct_Motor_Control.yaw=(4095-RO_ALL_Data.channel[3])/21;
 898              	.LM57:
 899 0648 40309FE5 		ldr	r3, .L35+4
 900 064c B630D3E1 		ldrh	r3, [r3, #6]
 901 0650 FF2E63E2 		rsb	r2, r3, #4080
 902 0654 0F2082E2 		add	r2, r2, #15
 903 0658 C335A0E3 		mov	r3, #817889280
 904 065c C33B83E2 		add	r3, r3, #199680
 905 0660 313083E2 		add	r3, r3, #49
 906 0664 9213C3E0 		smull	r1, r3, r2, r3
 907 0668 4311A0E1 		mov	r1, r3, asr #2
 908 066c C23FA0E1 		mov	r3, r2, asr #31
 909 0670 013063E0 		rsb	r3, r3, r1
 910 0674 FF3003E2 		and	r3, r3, #255
 911 0678 14209FE5 		ldr	r2, .L35+8
 912 067c 0230C2E5 		strb	r3, [r2, #2]
 308:sdk.c         **** 
 309:sdk.c         **** }
 914              	.LM58:
 915 0680 0CD04BE2 		sub	sp, fp, #12
 916 0684 00689DE8 		ldmfd	sp, {fp, sp, lr}
 917 0688 1EFF2FE1 		bx	lr
 918              	.L36:
 919              		.align	2
 920              	.L35:
 921 068c 00000000 		.word	WO_SDK
 922 0690 00000000 		.word	RO_ALL_Data
 923 0694 00000000 		.word	WO_Direct_Motor_Control
 924 0698 87611886 		.word	-2045222521
 926              	.Lscope3:
 927              		.align	2
 929              		.global	SDK_EXAMPLE_attitude_commands
 931              	SDK_EXAMPLE_attitude_commands:
 310:sdk.c         **** 
 311:sdk.c         **** 
 312:sdk.c         **** void SDK_EXAMPLE_attitude_commands(void)
 313:sdk.c         **** {
 933              	.LM59:
 934              		@ Function supports interworking.
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 1, uses_anonymous_args = 0
 937 069c 0DC0A0E1 		mov	ip, sp
 938 06a0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 939 06a4 04B04CE2 		sub	fp, ip, #4
 314:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 941              	.LM60:
 942 06a8 34209FE5 		ldr	r2, .L39
 943 06ac 0230A0E3 		mov	r3, #2
 944 06b0 0030C2E5 		strb	r3, [r2, #0]
 315:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 316:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 317:sdk.c         **** 							//0x03: GPS waypoint control
 318:sdk.c         **** 
 319:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 946              	.LM61:
 947 06b4 28209FE5 		ldr	r2, .L39
 948 06b8 0130A0E3 		mov	r3, #1
 949 06bc 0130C2E5 		strb	r3, [r2, #1]
 320:sdk.c         **** 							//1: enable control by HL processor
 321:sdk.c         **** 
 322:sdk.c         **** 	//with this example the UAV will go to ~10% throttle when SDK control is activated
 323:sdk.c         **** 	WO_CTRL_Input.ctrl=0x08;	//0x08: enable throttle control by HL. Height control and GPS are deactiv
 951              	.LM62:
 952 06c0 20209FE5 		ldr	r2, .L39+4
 953 06c4 0830A0E3 		mov	r3, #8
 954 06c8 B830C2E1 		strh	r3, [r2, #8]	@ movhi
 324:sdk.c         **** 								//pitch, roll and yaw are still commanded via the remote control
 325:sdk.c         **** 
 326:sdk.c         **** 	WO_CTRL_Input.thrust=400;	//10% throttle command
 956              	.LM63:
 957 06cc 14209FE5 		ldr	r2, .L39+4
 958 06d0 193EA0E3 		mov	r3, #400
 959 06d4 B630C2E1 		strh	r3, [r2, #6]	@ movhi
 327:sdk.c         **** 
 328:sdk.c         **** 
 329:sdk.c         **** }
 961              	.LM64:
 962 06d8 0CD04BE2 		sub	sp, fp, #12
 963 06dc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 964 06e0 1EFF2FE1 		bx	lr
 965              	.L40:
 966              		.align	2
 967              	.L39:
 968 06e4 00000000 		.word	WO_SDK
 969 06e8 00000000 		.word	WO_CTRL_Input
 971              	.Lscope4:
 972              		.bss
 973              		.align	2
 974              	originLon.2247:
 975 042c 00000000 		.space	8
 975      00000000 
 977              		.align	2
 978              	originLat.2246:
 979 0434 00000000 		.space	8
 979      00000000 
 981              	wpExampleState.2245:
 982 043c 00       		.space	1
 984              		.global	__floatsidf
 985              		.global	__divdf3
 986              		.global	__muldf3
 987              		.global	__fixdfsi
 988              		.text
 989              		.align	2
 991              		.global	SDK_EXAMPLE_gps_waypoint_control
 993              	SDK_EXAMPLE_gps_waypoint_control:
 330:sdk.c         **** 
 331:sdk.c         **** 
 332:sdk.c         **** 
 333:sdk.c         **** /* This function demonstrates a simple waypoint command generation. Switch on Channel 7 is used
 334:sdk.c         ****  * to activate a 15m by 15m square. Therefore a waypoint is calculated from the current position an
 335:sdk.c         ****  * height and is transmitted to the low level processor. The waypoint status is monitored to switch
 336:sdk.c         ****  * the next waypoint after the current one is reached.
 337:sdk.c         ****  *
 338:sdk.c         ****  * wpCtrlWpCmd is used to send a command to the low level processor. Different options like waypoin
 339:sdk.c         ****  * are available. See LL_HL_comm.h for WP_CMD_* defines
 340:sdk.c         ****  *
 341:sdk.c         ****  * wpCtrlWpCmdUpdated has to be set to 1 to send the command. When the cmd is sent it is set back t
 342:sdk.c         ****  *
 343:sdk.c         ****  * wpCtrlAckTrigger is set to 1 when the LL accepts the waypoint
 344:sdk.c         ****  *
 345:sdk.c         ****  * wpCtrlNavStatus gives you a navigation status. See WP_NAVSTAT_* defines in SDK.h for options
 346:sdk.c         ****  *
 347:sdk.c         ****  * wpCtrlDistToWp gives you the current distance to the current waypoint in dm (= 10 cm)
 348:sdk.c         ****  */
 349:sdk.c         **** void SDK_EXAMPLE_gps_waypoint_control()
 350:sdk.c         **** {
 995              	.LM65:
 996              		@ Function supports interworking.
 997              		@ args = 0, pretend = 0, frame = 48
 998              		@ frame_needed = 1, uses_anonymous_args = 0
 999 06ec 0DC0A0E1 		mov	ip, sp
 1000 06f0 70D82DE9 		stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}
 1001 06f4 04B04CE2 		sub	fp, ip, #4
 1002 06f8 48D04DE2 		sub	sp, sp, #72
 351:sdk.c         **** 	static unsigned char wpExampleState=0;
 352:sdk.c         **** 	static double originLat,originLon;
 353:sdk.c         **** 
 354:sdk.c         **** 
 355:sdk.c         **** 	WO_SDK.ctrl_mode=0x03;
 1004              	.LM66:
 1005 06fc 34239FE5 		ldr	r2, .L79
 1006 0700 0330A0E3 		mov	r3, #3
 1007 0704 0030C2E5 		strb	r3, [r2, #0]
 356:sdk.c         **** 
 357:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 1009              	.LM67:
 1010 0708 28239FE5 		ldr	r2, .L79
 1011 070c 0130A0E3 		mov	r3, #1
 1012 0710 0130C2E5 		strb	r3, [r2, #1]
 358:sdk.c         **** 							//1: enable control by HL processor
 359:sdk.c         **** 
 360:sdk.c         **** 	switch (wpExampleState)
 1014              	.LM68:
 1015 0714 2C339FE5 		ldr	r3, .L79+16
 1016 0718 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1017 071c 040053E3 		cmp	r3, #4
 1018 0720 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1019 0724 DC0200EA 		b	.L42
 1020              		.align	2
 1021              	.L48:
 1022 0728 3C070000 		.word	.L43
 1023 072c 64070000 		.word	.L44
 1024 0730 700A0000 		.word	.L45
 1025 0734 380D0000 		.word	.L46
 1026 0738 2C100000 		.word	.L47
 1027              	.L43:
 361:sdk.c         **** 	{
 362:sdk.c         **** 		//prior to start, the lever on channel 7 has to be in "OFF" position
 363:sdk.c         **** 		case 0:
 364:sdk.c         **** 		if (RO_RC_Data.channel[6]<1600)
 1029              	.LM69:
 1030 073c 00339FE5 		ldr	r3, .L79+12
 1031 0740 BC20D3E1 		ldrh	r2, [r3, #12]
 1032 0744 633EA0E3 		mov	r3, #1584
 1033 0748 0F3083E2 		add	r3, r3, #15
 1034 074c 030052E1 		cmp	r2, r3
 1035 0750 D402008A 		bhi	.L78
 365:sdk.c         **** 			wpExampleState=1;
 1037              	.LM70:
 1038 0754 EC329FE5 		ldr	r3, .L79+16
 1039 0758 0120A0E3 		mov	r2, #1
 1040 075c 0020C3E5 		strb	r2, [r3, #0]
 366:sdk.c         **** 		break;
 1042              	.LM71:
 1043 0760 D00200EA 		b	.L78
 1044              	.L44:
 367:sdk.c         **** 
 368:sdk.c         **** 		case 1:
 369:sdk.c         **** 		if (RO_RC_Data.channel[6]>2400)
 1046              	.LM72:
 1047 0764 D8329FE5 		ldr	r3, .L79+12
 1048 0768 BC30D3E1 		ldrh	r3, [r3, #12]
 1049 076c 960E53E3 		cmp	r3, #2400
 1050 0770 CC02009A 		bls	.L78
 1051              	.LBB2:
 370:sdk.c         **** 		{
 371:sdk.c         **** 			double lat,lon;
 372:sdk.c         **** 			//lever was set to "ON" state -> calculate and send first waypoint and switch state
 373:sdk.c         **** 
 374:sdk.c         **** 			//fill waypoint structure
 375:sdk.c         **** 			wpToLL.max_speed=100;
 1053              	.LM73:
 1054 0774 E0229FE5 		ldr	r2, .L79+36
 1055 0778 6430A0E3 		mov	r3, #100
 1056 077c 0530C2E5 		strb	r3, [r2, #5]
 376:sdk.c         **** 			wpToLL.pos_acc=3000; 	//3m accuracy
 1058              	.LM74:
 1059 0780 D4229FE5 		ldr	r2, .L79+36
 1060 0784 BB3EA0E3 		mov	r3, #2992
 1061 0788 083083E2 		add	r3, r3, #8
 1062 078c B830C2E1 		strh	r3, [r2, #8]	@ movhi
 377:sdk.c         **** 			wpToLL.time=400; 		//4 seconds waiting time at each waypoint
 1064              	.LM75:
 1065 0790 C4229FE5 		ldr	r2, .L79+36
 1066 0794 193EA0E3 		mov	r3, #400
 1067 0798 B630C2E1 		strh	r3, [r2, #6]	@ movhi
 378:sdk.c         **** 			wpToLL.wp_activated=1;
 1069              	.LM76:
 1070 079c B8229FE5 		ldr	r2, .L79+36
 1071 07a0 0130A0E3 		mov	r3, #1
 1072 07a4 003082E5 		str	r3, [r2, #0]
 379:sdk.c         **** 
 380:sdk.c         **** 			//see LL_HL_comm.h for WPPROP defines
 381:sdk.c         **** 			wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED;
 1074              	.LM77:
 1075 07a8 AC229FE5 		ldr	r2, .L79+36
 1076 07ac 1730A0E3 		mov	r3, #23
 1077 07b0 0430C2E5 		strb	r3, [r2, #4]
 382:sdk.c         **** 
 383:sdk.c         **** 			//use current height and yaw
 384:sdk.c         **** 			wpToLL.yaw=IMU_CalcData.angle_yaw; //use current yaw
 1079              	.LM78:
 1080 07b4 9C329FE5 		ldr	r3, .L79+32
 1081 07b8 082093E5 		ldr	r2, [r3, #8]
 1082 07bc 98329FE5 		ldr	r3, .L79+36
 1083 07c0 142083E5 		str	r2, [r3, #20]
 385:sdk.c         **** 			wpToLL.height=IMU_CalcData.height; //use current height
 1085              	.LM79:
 1086 07c4 8C329FE5 		ldr	r3, .L79+32
 1087 07c8 4C2093E5 		ldr	r2, [r3, #76]
 1088 07cc 88329FE5 		ldr	r3, .L79+36
 1089 07d0 182083E5 		str	r2, [r3, #24]
 386:sdk.c         **** 
 387:sdk.c         **** 			originLat=(double)GPS_Data.latitude/10000000.0;
 1091              	.LM80:
 1092 07d4 60329FE5 		ldr	r3, .L79+4
 1093 07d8 003093E5 		ldr	r3, [r3, #0]
 1094 07dc 0300A0E1 		mov	r0, r3
 1095 07e0 FEFFFFEB 		bl	__floatsidf
 1096 07e4 0030A0E1 		mov	r3, r0
 1097 07e8 0140A0E1 		mov	r4, r1
 1098 07ec 0300A0E1 		mov	r0, r3
 1099 07f0 0410A0E1 		mov	r1, r4
 1100 07f4 9B2F8FE2 		adr	r2, .L79+48
 1101 07f8 0C0092E8 		ldmia	r2, {r2-r3}
 1102 07fc FEFFFFEB 		bl	__divdf3
 1103 0800 0030A0E1 		mov	r3, r0
 1104 0804 0140A0E1 		mov	r4, r1
 1105 0808 50229FE5 		ldr	r2, .L79+40
 1106 080c 180082E8 		stmia	r2, {r3-r4}
 388:sdk.c         **** 			originLon=(double)GPS_Data.longitude/10000000.0;
 1108              	.LM81:
 1109 0810 24329FE5 		ldr	r3, .L79+4
 1110 0814 043093E5 		ldr	r3, [r3, #4]
 1111 0818 0300A0E1 		mov	r0, r3
 1112 081c FEFFFFEB 		bl	__floatsidf
 1113 0820 0030A0E1 		mov	r3, r0
 1114 0824 0140A0E1 		mov	r4, r1
 1115 0828 0300A0E1 		mov	r0, r3
 1116 082c 0410A0E1 		mov	r1, r4
 1117 0830 232E8FE2 		adr	r2, .L79+48
 1118 0834 0C0092E8 		ldmia	r2, {r2-r3}
 1119 0838 FEFFFFEB 		bl	__divdf3
 1120 083c 0030A0E1 		mov	r3, r0
 1121 0840 0140A0E1 		mov	r4, r1
 1122 0844 18229FE5 		ldr	r2, .L79+44
 1123 0848 180082E8 		stmia	r2, {r3-r4}
 389:sdk.c         **** 
 390:sdk.c         **** 			//calculate a position 15m north of us
 391:sdk.c         **** 			xy2latlon(originLat,originLon,0.0,15.0,&lat,&lon);
 1125              	.LM82:
 1126 084c 0C329FE5 		ldr	r3, .L79+40
 1127 0850 060093E8 		ldmia	r3, {r1-r2}
 1128 0854 08329FE5 		ldr	r3, .L79+44
 1129 0858 600093E8 		ldmia	r3, {r5-r6}
 1130 085c 0030A0E3 		mov	r3, #0
 1131 0860 0040A0E3 		mov	r4, #0
 1132 0864 18008DE8 		stmia	sp, {r3-r4}
 1133 0868 0131A0E3 		mov	r3, #1073741824
 1134 086c 2E3883E2 		add	r3, r3, #3014656
 1135 0870 0040A0E3 		mov	r4, #0
 1136 0874 08308DE5 		str	r3, [sp, #8]
 1137 0878 0C408DE5 		str	r4, [sp, #12]
 1138 087c 20304BE2 		sub	r3, fp, #32
 1139 0880 10308DE5 		str	r3, [sp, #16]
 1140 0884 28304BE2 		sub	r3, fp, #40
 1141 0888 14308DE5 		str	r3, [sp, #20]
 1142 088c 0100A0E1 		mov	r0, r1
 1143 0890 0210A0E1 		mov	r1, r2
 1144 0894 0520A0E1 		mov	r2, r5
 1145 0898 0630A0E1 		mov	r3, r6
 1146 089c FEFFFFEB 		bl	xy2latlon
 392:sdk.c         **** 
 393:sdk.c         **** 			wpToLL.X=lon*10000000;
 1148              	.LM83:
 1149 08a0 28304BE2 		sub	r3, fp, #40
 1150 08a4 180093E8 		ldmia	r3, {r3-r4}
 1151 08a8 0300A0E1 		mov	r0, r3
 1152 08ac 0410A0E1 		mov	r1, r4
 1153 08b0 1B2E8FE2 		adr	r2, .L79+48
 1154 08b4 0C0092E8 		ldmia	r2, {r2-r3}
 1155 08b8 FEFFFFEB 		bl	__muldf3
 1156 08bc 0030A0E1 		mov	r3, r0
 1157 08c0 0140A0E1 		mov	r4, r1
 1158 08c4 0300A0E1 		mov	r0, r3
 1159 08c8 0410A0E1 		mov	r1, r4
 1160 08cc FEFFFFEB 		bl	__fixdfsi
 1161 08d0 0020A0E1 		mov	r2, r0
 1162 08d4 80319FE5 		ldr	r3, .L79+36
 1163 08d8 0C2083E5 		str	r2, [r3, #12]
 394:sdk.c         **** 			wpToLL.Y=lat*10000000;
 1165              	.LM84:
 1166 08dc 20304BE2 		sub	r3, fp, #32
 1167 08e0 180093E8 		ldmia	r3, {r3-r4}
 1168 08e4 0300A0E1 		mov	r0, r3
 1169 08e8 0410A0E1 		mov	r1, r4
 1170 08ec 5D2F8FE2 		adr	r2, .L79+48
 1171 08f0 0C0092E8 		ldmia	r2, {r2-r3}
 1172 08f4 FEFFFFEB 		bl	__muldf3
 1173 08f8 0030A0E1 		mov	r3, r0
 1174 08fc 0140A0E1 		mov	r4, r1
 1175 0900 0300A0E1 		mov	r0, r3
 1176 0904 0410A0E1 		mov	r1, r4
 1177 0908 FEFFFFEB 		bl	__fixdfsi
 1178 090c 0020A0E1 		mov	r2, r0
 1179 0910 44319FE5 		ldr	r3, .L79+36
 1180 0914 102083E5 		str	r2, [r3, #16]
 395:sdk.c         **** 
 396:sdk.c         **** 			//calc chksum
 397:sdk.c         **** 			wpToLL.chksum = 0xAAAA
 1182              	.LM85:
 1183 0918 3C319FE5 		ldr	r3, .L79+36
 1184 091c 143093E5 		ldr	r3, [r3, #20]
 1185 0920 0338A0E1 		mov	r3, r3, asl #16
 1186 0924 2328A0E1 		mov	r2, r3, lsr #16
 1187 0928 2C319FE5 		ldr	r3, .L79+36
 1188 092c 183093E5 		ldr	r3, [r3, #24]
 1189 0930 0338A0E1 		mov	r3, r3, asl #16
 1190 0934 2338A0E1 		mov	r3, r3, lsr #16
 1191 0938 033082E0 		add	r3, r2, r3
 1192 093c 0338A0E1 		mov	r3, r3, asl #16
 1193 0940 2328A0E1 		mov	r2, r3, lsr #16
 1194 0944 10319FE5 		ldr	r3, .L79+36
 1195 0948 B630D3E1 		ldrh	r3, [r3, #6]
 1196 094c 033082E0 		add	r3, r2, r3
 1197 0950 0338A0E1 		mov	r3, r3, asl #16
 1198 0954 2328A0E1 		mov	r2, r3, lsr #16
 1199 0958 FC309FE5 		ldr	r3, .L79+36
 1200 095c 0C3093E5 		ldr	r3, [r3, #12]
 1201 0960 0338A0E1 		mov	r3, r3, asl #16
 1202 0964 2338A0E1 		mov	r3, r3, lsr #16
 1203 0968 033082E0 		add	r3, r2, r3
 1204 096c 0338A0E1 		mov	r3, r3, asl #16
 1205 0970 2328A0E1 		mov	r2, r3, lsr #16
 1206 0974 E0309FE5 		ldr	r3, .L79+36
 1207 0978 103093E5 		ldr	r3, [r3, #16]
 1208 097c 0338A0E1 		mov	r3, r3, asl #16
 1209 0980 2338A0E1 		mov	r3, r3, lsr #16
 1210 0984 033082E0 		add	r3, r2, r3
 1211 0988 0338A0E1 		mov	r3, r3, asl #16
 1212 098c 2328A0E1 		mov	r2, r3, lsr #16
 1213 0990 C4309FE5 		ldr	r3, .L79+36
 1214 0994 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1215 0998 033082E0 		add	r3, r2, r3
 1216 099c 0338A0E1 		mov	r3, r3, asl #16
 1217 09a0 2328A0E1 		mov	r2, r3, lsr #16
 1218 09a4 B0309FE5 		ldr	r3, .L79+36
 1219 09a8 B830D3E1 		ldrh	r3, [r3, #8]
 1220 09ac 033082E0 		add	r3, r2, r3
 1221 09b0 0338A0E1 		mov	r3, r3, asl #16
 1222 09b4 2328A0E1 		mov	r2, r3, lsr #16
 1223 09b8 9C309FE5 		ldr	r3, .L79+36
 1224 09bc 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1225 09c0 033082E0 		add	r3, r2, r3
 1226 09c4 0338A0E1 		mov	r3, r3, asl #16
 1227 09c8 2328A0E1 		mov	r2, r3, lsr #16
 1228 09cc 88309FE5 		ldr	r3, .L79+36
 1229 09d0 003093E5 		ldr	r3, [r3, #0]
 1230 09d4 0338A0E1 		mov	r3, r3, asl #16
 1231 09d8 2338A0E1 		mov	r3, r3, lsr #16
 1232 09dc 033082E0 		add	r3, r2, r3
 1233 09e0 0338A0E1 		mov	r3, r3, asl #16
 1234 09e4 2338A0E1 		mov	r3, r3, lsr #16
 1235 09e8 553C43E2 		sub	r3, r3, #21760
 1236 09ec 563043E2 		sub	r3, r3, #86
 1237 09f0 0338A0E1 		mov	r3, r3, asl #16
 1238 09f4 2338A0E1 		mov	r3, r3, lsr #16
 1239 09f8 0320A0E1 		mov	r2, r3
 1240 09fc 58309FE5 		ldr	r3, .L79+36
 1241 0a00 BA20C3E1 		strh	r2, [r3, #10]	@ movhi
 398:sdk.c         **** 									+ wpToLL.yaw
 399:sdk.c         **** 									+ wpToLL.height
 400:sdk.c         **** 									+ wpToLL.time
 401:sdk.c         **** 									+ wpToLL.X
 402:sdk.c         **** 									+ wpToLL.Y
 403:sdk.c         **** 									+ wpToLL.max_speed
 404:sdk.c         **** 									+ wpToLL.pos_acc
 405:sdk.c         **** 									+ wpToLL.properties
 406:sdk.c         **** 									+ wpToLL.wp_activated;
 407:sdk.c         **** 
 408:sdk.c         **** 			//send waypoint
 409:sdk.c         **** 			wpCtrlAckTrigger=0;
 1243              	.LM86:
 1244 0a04 44209FE5 		ldr	r2, .L79+24
 1245 0a08 0030A0E3 		mov	r3, #0
 1246 0a0c 0030C2E5 		strb	r3, [r2, #0]
 410:sdk.c         **** 			wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 1248              	.LM87:
 1249 0a10 28209FE5 		ldr	r2, .L79+8
 1250 0a14 0130A0E3 		mov	r3, #1
 1251 0a18 0030C2E5 		strb	r3, [r2, #0]
 411:sdk.c         **** 			wpCtrlWpCmdUpdated=1;
 1253              	.LM88:
 1254 0a1c 28209FE5 		ldr	r2, .L79+20
 1255 0a20 0130A0E3 		mov	r3, #1
 1256 0a24 0030C2E5 		strb	r3, [r2, #0]
 412:sdk.c         **** 
 413:sdk.c         **** 			wpExampleState=2;
 1258              	.LM89:
 1259 0a28 18209FE5 		ldr	r2, .L79+16
 1260 0a2c 0230A0E3 		mov	r3, #2
 1261 0a30 0030C2E5 		strb	r3, [r2, #0]
 414:sdk.c         **** 
 415:sdk.c         **** 		}
 416:sdk.c         **** 		break;
 1263              	.LM90:
 1264 0a34 1B0200EA 		b	.L78
 1265              	.L80:
 1266              		.align	2
 1267              	.L79:
 1268 0a38 00000000 		.word	WO_SDK
 1269 0a3c 00000000 		.word	GPS_Data
 1270 0a40 00000000 		.word	wpCtrlWpCmd
 1271 0a44 00000000 		.word	RO_RC_Data
 1272 0a48 3C040000 		.word	wpExampleState.2245
 1273 0a4c 00000000 		.word	wpCtrlWpCmdUpdated
 1274 0a50 00000000 		.word	wpCtrlAckTrigger
 1275 0a54 00000000 		.word	wpCtrlNavStatus
 1276 0a58 00000000 		.word	IMU_CalcData
 1277 0a5c 00000000 		.word	wpToLL
 1278 0a60 34040000 		.word	originLat.2246
 1279 0a64 2C040000 		.word	originLon.2247
 1280 0a68 D0126341 		.word	1097011920
 1281 0a6c 00000000 		.word	0
 1282              	.L45:
 1283              	.LBE2:
 417:sdk.c         **** 
 418:sdk.c         **** 		case 2:
 419:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 420:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 1285              	.LM91:
 1286 0a70 2C301FE5 		ldr	r3, .L79+20
 1287 0a74 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1288 0a78 000053E3 		cmp	r3, #0
 1289 0a7c A300001A 		bne	.L54
 1290 0a80 38301FE5 		ldr	r3, .L79+24
 1291 0a84 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1292 0a88 000053E3 		cmp	r3, #0
 1293 0a8c 9F00000A 		beq	.L54
 421:sdk.c         **** 			{
 422:sdk.c         **** 				//check if waypoint was reached and wait time is over
 423:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 1295              	.LM92:
 1296 0a90 44301FE5 		ldr	r3, .L79+28
 1297 0a94 B030D3E1 		ldrh	r3, [r3, #0]
 1298 0a98 023003E2 		and	r3, r3, #2
 1299 0a9c 000053E3 		cmp	r3, #0
 1300 0aa0 9200000A 		beq	.L57
 1301              	.LBB3:
 424:sdk.c         **** 				{
 425:sdk.c         **** 					//new waypoint
 426:sdk.c         **** 					double lat,lon;
 427:sdk.c         **** 
 428:sdk.c         **** 					//fill waypoint structure
 429:sdk.c         **** 					wpToLL.max_speed=100;
 1303              	.LM93:
 1304 0aa4 50201FE5 		ldr	r2, .L79+36
 1305 0aa8 6430A0E3 		mov	r3, #100
 1306 0aac 0530C2E5 		strb	r3, [r2, #5]
 430:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 1308              	.LM94:
 1309 0ab0 5C201FE5 		ldr	r2, .L79+36
 1310 0ab4 BB3EA0E3 		mov	r3, #2992
 1311 0ab8 083083E2 		add	r3, r3, #8
 1312 0abc B830C2E1 		strh	r3, [r2, #8]	@ movhi
 431:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 1314              	.LM95:
 1315 0ac0 6C201FE5 		ldr	r2, .L79+36
 1316 0ac4 193EA0E3 		mov	r3, #400
 1317 0ac8 B630C2E1 		strh	r3, [r2, #6]	@ movhi
 432:sdk.c         **** 					wpToLL.wp_activated=1;
 1319              	.LM96:
 1320 0acc 78201FE5 		ldr	r2, .L79+36
 1321 0ad0 0130A0E3 		mov	r3, #1
 1322 0ad4 003082E5 		str	r3, [r2, #0]
 433:sdk.c         **** 
 434:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 435:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 1324              	.LM97:
 1325 0ad8 84201FE5 		ldr	r2, .L79+36
 1326 0adc 1730A0E3 		mov	r3, #23
 1327 0ae0 0430C2E5 		strb	r3, [r2, #4]
 436:sdk.c         **** 
 437:sdk.c         **** 					//use current height and yaw
 438:sdk.c         **** 					wpToLL.yaw=IMU_CalcData.angle_yaw; //use current yaw
 1329              	.LM98:
 1330 0ae4 94301FE5 		ldr	r3, .L79+32
 1331 0ae8 082093E5 		ldr	r2, [r3, #8]
 1332 0aec 98301FE5 		ldr	r3, .L79+36
 1333 0af0 142083E5 		str	r2, [r3, #20]
 439:sdk.c         **** 					wpToLL.height=IMU_CalcData.height; //use current height
 1335              	.LM99:
 1336 0af4 A4301FE5 		ldr	r3, .L79+32
 1337 0af8 4C2093E5 		ldr	r2, [r3, #76]
 1338 0afc A8301FE5 		ldr	r3, .L79+36
 1339 0b00 182083E5 		str	r2, [r3, #24]
 440:sdk.c         **** 
 441:sdk.c         **** 					//calculate a position 15m north and 15m east of origin
 442:sdk.c         **** 					xy2latlon(originLat,originLon,15.0,15.0,&lat,&lon);
 1341              	.LM100:
 1342 0b04 AC301FE5 		ldr	r3, .L79+40
 1343 0b08 060093E8 		ldmia	r3, {r1-r2}
 1344 0b0c B0301FE5 		ldr	r3, .L79+44
 1345 0b10 600093E8 		ldmia	r3, {r5-r6}
 1346 0b14 0131A0E3 		mov	r3, #1073741824
 1347 0b18 2E3883E2 		add	r3, r3, #3014656
 1348 0b1c 0040A0E3 		mov	r4, #0
 1349 0b20 18008DE8 		stmia	sp, {r3-r4}
 1350 0b24 0131A0E3 		mov	r3, #1073741824
 1351 0b28 2E3883E2 		add	r3, r3, #3014656
 1352 0b2c 0040A0E3 		mov	r4, #0
 1353 0b30 08308DE5 		str	r3, [sp, #8]
 1354 0b34 0C408DE5 		str	r4, [sp, #12]
 1355 0b38 30304BE2 		sub	r3, fp, #48
 1356 0b3c 10308DE5 		str	r3, [sp, #16]
 1357 0b40 38304BE2 		sub	r3, fp, #56
 1358 0b44 14308DE5 		str	r3, [sp, #20]
 1359 0b48 0100A0E1 		mov	r0, r1
 1360 0b4c 0210A0E1 		mov	r1, r2
 1361 0b50 0520A0E1 		mov	r2, r5
 1362 0b54 0630A0E1 		mov	r3, r6
 1363 0b58 FEFFFFEB 		bl	xy2latlon
 443:sdk.c         **** 
 444:sdk.c         **** 					wpToLL.X=lon*10000000;
 1365              	.LM101:
 1366 0b5c 38304BE2 		sub	r3, fp, #56
 1367 0b60 180093E8 		ldmia	r3, {r3-r4}
 1368 0b64 0300A0E1 		mov	r0, r3
 1369 0b68 0410A0E1 		mov	r1, r4
 1370 0b6c 432F4FE2 		adr	r2, .L79+48
 1371 0b70 0C0092E8 		ldmia	r2, {r2-r3}
 1372 0b74 FEFFFFEB 		bl	__muldf3
 1373 0b78 0030A0E1 		mov	r3, r0
 1374 0b7c 0140A0E1 		mov	r4, r1
 1375 0b80 0300A0E1 		mov	r0, r3
 1376 0b84 0410A0E1 		mov	r1, r4
 1377 0b88 FEFFFFEB 		bl	__fixdfsi
 1378 0b8c 0020A0E1 		mov	r2, r0
 1379 0b90 3C311FE5 		ldr	r3, .L79+36
 1380 0b94 0C2083E5 		str	r2, [r3, #12]
 445:sdk.c         **** 					wpToLL.Y=lat*10000000;
 1382              	.LM102:
 1383 0b98 30304BE2 		sub	r3, fp, #48
 1384 0b9c 180093E8 		ldmia	r3, {r3-r4}
 1385 0ba0 0300A0E1 		mov	r0, r3
 1386 0ba4 0410A0E1 		mov	r1, r4
 1387 0ba8 522F4FE2 		adr	r2, .L79+48
 1388 0bac 0C0092E8 		ldmia	r2, {r2-r3}
 1389 0bb0 FEFFFFEB 		bl	__muldf3
 1390 0bb4 0030A0E1 		mov	r3, r0
 1391 0bb8 0140A0E1 		mov	r4, r1
 1392 0bbc 0300A0E1 		mov	r0, r3
 1393 0bc0 0410A0E1 		mov	r1, r4
 1394 0bc4 FEFFFFEB 		bl	__fixdfsi
 1395 0bc8 0020A0E1 		mov	r2, r0
 1396 0bcc 78311FE5 		ldr	r3, .L79+36
 1397 0bd0 102083E5 		str	r2, [r3, #16]
 446:sdk.c         **** 
 447:sdk.c         **** 					//calc chksum
 448:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 1399              	.LM103:
 1400 0bd4 80311FE5 		ldr	r3, .L79+36
 1401 0bd8 143093E5 		ldr	r3, [r3, #20]
 1402 0bdc 0338A0E1 		mov	r3, r3, asl #16
 1403 0be0 2328A0E1 		mov	r2, r3, lsr #16
 1404 0be4 90311FE5 		ldr	r3, .L79+36
 1405 0be8 183093E5 		ldr	r3, [r3, #24]
 1406 0bec 0338A0E1 		mov	r3, r3, asl #16
 1407 0bf0 2338A0E1 		mov	r3, r3, lsr #16
 1408 0bf4 033082E0 		add	r3, r2, r3
 1409 0bf8 0338A0E1 		mov	r3, r3, asl #16
 1410 0bfc 2328A0E1 		mov	r2, r3, lsr #16
 1411 0c00 AC311FE5 		ldr	r3, .L79+36
 1412 0c04 B630D3E1 		ldrh	r3, [r3, #6]
 1413 0c08 033082E0 		add	r3, r2, r3
 1414 0c0c 0338A0E1 		mov	r3, r3, asl #16
 1415 0c10 2328A0E1 		mov	r2, r3, lsr #16
 1416 0c14 C0311FE5 		ldr	r3, .L79+36
 1417 0c18 0C3093E5 		ldr	r3, [r3, #12]
 1418 0c1c 0338A0E1 		mov	r3, r3, asl #16
 1419 0c20 2338A0E1 		mov	r3, r3, lsr #16
 1420 0c24 033082E0 		add	r3, r2, r3
 1421 0c28 0338A0E1 		mov	r3, r3, asl #16
 1422 0c2c 2328A0E1 		mov	r2, r3, lsr #16
 1423 0c30 DC311FE5 		ldr	r3, .L79+36
 1424 0c34 103093E5 		ldr	r3, [r3, #16]
 1425 0c38 0338A0E1 		mov	r3, r3, asl #16
 1426 0c3c 2338A0E1 		mov	r3, r3, lsr #16
 1427 0c40 033082E0 		add	r3, r2, r3
 1428 0c44 0338A0E1 		mov	r3, r3, asl #16
 1429 0c48 2328A0E1 		mov	r2, r3, lsr #16
 1430 0c4c F8311FE5 		ldr	r3, .L79+36
 1431 0c50 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1432 0c54 033082E0 		add	r3, r2, r3
 1433 0c58 0338A0E1 		mov	r3, r3, asl #16
 1434 0c5c 2328A0E1 		mov	r2, r3, lsr #16
 1435 0c60 0C321FE5 		ldr	r3, .L79+36
 1436 0c64 B830D3E1 		ldrh	r3, [r3, #8]
 1437 0c68 033082E0 		add	r3, r2, r3
 1438 0c6c 0338A0E1 		mov	r3, r3, asl #16
 1439 0c70 2328A0E1 		mov	r2, r3, lsr #16
 1440 0c74 20321FE5 		ldr	r3, .L79+36
 1441 0c78 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1442 0c7c 033082E0 		add	r3, r2, r3
 1443 0c80 0338A0E1 		mov	r3, r3, asl #16
 1444 0c84 2328A0E1 		mov	r2, r3, lsr #16
 1445 0c88 34321FE5 		ldr	r3, .L79+36
 1446 0c8c 003093E5 		ldr	r3, [r3, #0]
 1447 0c90 0338A0E1 		mov	r3, r3, asl #16
 1448 0c94 2338A0E1 		mov	r3, r3, lsr #16
 1449 0c98 033082E0 		add	r3, r2, r3
 1450 0c9c 0338A0E1 		mov	r3, r3, asl #16
 1451 0ca0 2338A0E1 		mov	r3, r3, lsr #16
 1452 0ca4 553C43E2 		sub	r3, r3, #21760
 1453 0ca8 563043E2 		sub	r3, r3, #86
 1454 0cac 0338A0E1 		mov	r3, r3, asl #16
 1455 0cb0 2338A0E1 		mov	r3, r3, lsr #16
 1456 0cb4 0320A0E1 		mov	r2, r3
 1457 0cb8 64321FE5 		ldr	r3, .L79+36
 1458 0cbc BA20C3E1 		strh	r2, [r3, #10]	@ movhi
 449:sdk.c         **** 											+ wpToLL.yaw
 450:sdk.c         **** 											+ wpToLL.height
 451:sdk.c         **** 											+ wpToLL.time
 452:sdk.c         **** 											+ wpToLL.X
 453:sdk.c         **** 											+ wpToLL.Y
 454:sdk.c         **** 											+ wpToLL.max_speed
 455:sdk.c         **** 											+ wpToLL.pos_acc
 456:sdk.c         **** 											+ wpToLL.properties
 457:sdk.c         **** 											+ wpToLL.wp_activated;
 458:sdk.c         **** 					//send waypoint
 459:sdk.c         **** 					wpCtrlAckTrigger=0;
 1460              	.LM104:
 1461 0cc0 78221FE5 		ldr	r2, .L79+24
 1462 0cc4 0030A0E3 		mov	r3, #0
 1463 0cc8 0030C2E5 		strb	r3, [r2, #0]
 460:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 1465              	.LM105:
 1466 0ccc 94221FE5 		ldr	r2, .L79+8
 1467 0cd0 0130A0E3 		mov	r3, #1
 1468 0cd4 0030C2E5 		strb	r3, [r2, #0]
 461:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 1470              	.LM106:
 1471 0cd8 94221FE5 		ldr	r2, .L79+20
 1472 0cdc 0130A0E3 		mov	r3, #1
 1473 0ce0 0030C2E5 		strb	r3, [r2, #0]
 462:sdk.c         **** 
 463:sdk.c         **** 					wpExampleState=3;
 1475              	.LM107:
 1476 0ce4 A4221FE5 		ldr	r2, .L79+16
 1477 0ce8 0330A0E3 		mov	r3, #3
 1478 0cec 0030C2E5 		strb	r3, [r2, #0]
 1479              	.L57:
 1480              	.LBE3:
 464:sdk.c         **** 				}
 465:sdk.c         **** 
 466:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 1482              	.LM108:
 1483 0cf0 A4321FE5 		ldr	r3, .L79+28
 1484 0cf4 B030D3E1 		ldrh	r3, [r3, #0]
 1485 0cf8 083003E2 		and	r3, r3, #8
 1486 0cfc 000053E3 		cmp	r3, #0
 1487 0d00 0200000A 		beq	.L54
 467:sdk.c         **** 					wpExampleState=0;
 1489              	.LM109:
 1490 0d04 C4321FE5 		ldr	r3, .L79+16
 1491 0d08 0020A0E3 		mov	r2, #0
 1492 0d0c 0020C3E5 		strb	r2, [r3, #0]
 1493              	.L54:
 468:sdk.c         **** 
 469:sdk.c         **** 
 470:sdk.c         **** 			}
 471:sdk.c         **** 			if (RO_RC_Data.channel[6]<1600)
 1495              	.LM110:
 1496 0d10 D4321FE5 		ldr	r3, .L79+12
 1497 0d14 BC20D3E1 		ldrh	r2, [r3, #12]
 1498 0d18 633EA0E3 		mov	r3, #1584
 1499 0d1c 0F3083E2 		add	r3, r3, #15
 1500 0d20 030052E1 		cmp	r2, r3
 1501 0d24 5F01008A 		bhi	.L78
 472:sdk.c         **** 						wpExampleState=0;
 1503              	.LM111:
 1504 0d28 E8321FE5 		ldr	r3, .L79+16
 1505 0d2c 0020A0E3 		mov	r2, #0
 1506 0d30 0020C3E5 		strb	r2, [r3, #0]
 473:sdk.c         **** 		break;
 1508              	.LM112:
 1509 0d34 5B0100EA 		b	.L78
 1510              	.L46:
 474:sdk.c         **** 
 475:sdk.c         **** 		case 3:
 476:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 477:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 1512              	.LM113:
 1513 0d38 F4321FE5 		ldr	r3, .L79+20
 1514 0d3c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1515 0d40 000053E3 		cmp	r3, #0
 1516 0d44 A200001A 		bne	.L62
 1517 0d48 00331FE5 		ldr	r3, .L79+24
 1518 0d4c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1519 0d50 000053E3 		cmp	r3, #0
 1520 0d54 9E00000A 		beq	.L62
 478:sdk.c         **** 			{
 479:sdk.c         **** 				//check if waypoint was reached and wait time is over
 480:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 1522              	.LM114:
 1523 0d58 0C331FE5 		ldr	r3, .L79+28
 1524 0d5c B030D3E1 		ldrh	r3, [r3, #0]
 1525 0d60 023003E2 		and	r3, r3, #2
 1526 0d64 000053E3 		cmp	r3, #0
 1527 0d68 9100000A 		beq	.L65
 1528              	.LBB4:
 481:sdk.c         **** 				{
 482:sdk.c         **** 					//new waypoint
 483:sdk.c         **** 					double lat,lon;
 484:sdk.c         **** 
 485:sdk.c         **** 					//fill waypoint structure
 486:sdk.c         **** 					wpToLL.max_speed=100;
 1530              	.LM115:
 1531 0d6c 18231FE5 		ldr	r2, .L79+36
 1532 0d70 6430A0E3 		mov	r3, #100
 1533 0d74 0530C2E5 		strb	r3, [r2, #5]
 487:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 1535              	.LM116:
 1536 0d78 24231FE5 		ldr	r2, .L79+36
 1537 0d7c BB3EA0E3 		mov	r3, #2992
 1538 0d80 083083E2 		add	r3, r3, #8
 1539 0d84 B830C2E1 		strh	r3, [r2, #8]	@ movhi
 488:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 1541              	.LM117:
 1542 0d88 34231FE5 		ldr	r2, .L79+36
 1543 0d8c 193EA0E3 		mov	r3, #400
 1544 0d90 B630C2E1 		strh	r3, [r2, #6]	@ movhi
 489:sdk.c         **** 					wpToLL.wp_activated=1;
 1546              	.LM118:
 1547 0d94 40231FE5 		ldr	r2, .L79+36
 1548 0d98 0130A0E3 		mov	r3, #1
 1549 0d9c 003082E5 		str	r3, [r2, #0]
 490:sdk.c         **** 
 491:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 492:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 1551              	.LM119:
 1552 0da0 4C231FE5 		ldr	r2, .L79+36
 1553 0da4 1730A0E3 		mov	r3, #23
 1554 0da8 0430C2E5 		strb	r3, [r2, #4]
 493:sdk.c         **** 
 494:sdk.c         **** 					//use current height and yaw
 495:sdk.c         **** 					wpToLL.yaw=IMU_CalcData.angle_yaw; //use current yaw
 1556              	.LM120:
 1557 0dac 5C331FE5 		ldr	r3, .L79+32
 1558 0db0 082093E5 		ldr	r2, [r3, #8]
 1559 0db4 60331FE5 		ldr	r3, .L79+36
 1560 0db8 142083E5 		str	r2, [r3, #20]
 496:sdk.c         **** 					wpToLL.height=IMU_CalcData.height; //use current height
 1562              	.LM121:
 1563 0dbc 6C331FE5 		ldr	r3, .L79+32
 1564 0dc0 4C2093E5 		ldr	r2, [r3, #76]
 1565 0dc4 70331FE5 		ldr	r3, .L79+36
 1566 0dc8 182083E5 		str	r2, [r3, #24]
 497:sdk.c         **** 
 498:sdk.c         **** 					//calculate a position 15m east of origin
 499:sdk.c         **** 					xy2latlon(originLat,originLon,15.0,0.0,&lat,&lon);
 1568              	.LM122:
 1569 0dcc 74331FE5 		ldr	r3, .L79+40
 1570 0dd0 060093E8 		ldmia	r3, {r1-r2}
 1571 0dd4 78331FE5 		ldr	r3, .L79+44
 1572 0dd8 600093E8 		ldmia	r3, {r5-r6}
 1573 0ddc 0131A0E3 		mov	r3, #1073741824
 1574 0de0 2E3883E2 		add	r3, r3, #3014656
 1575 0de4 0040A0E3 		mov	r4, #0
 1576 0de8 18008DE8 		stmia	sp, {r3-r4}
 1577 0dec 0030A0E3 		mov	r3, #0
 1578 0df0 0040A0E3 		mov	r4, #0
 1579 0df4 08308DE5 		str	r3, [sp, #8]
 1580 0df8 0C408DE5 		str	r4, [sp, #12]
 1581 0dfc 40304BE2 		sub	r3, fp, #64
 1582 0e00 10308DE5 		str	r3, [sp, #16]
 1583 0e04 48304BE2 		sub	r3, fp, #72
 1584 0e08 14308DE5 		str	r3, [sp, #20]
 1585 0e0c 0100A0E1 		mov	r0, r1
 1586 0e10 0210A0E1 		mov	r1, r2
 1587 0e14 0520A0E1 		mov	r2, r5
 1588 0e18 0630A0E1 		mov	r3, r6
 1589 0e1c FEFFFFEB 		bl	xy2latlon
 500:sdk.c         **** 
 501:sdk.c         **** 					wpToLL.X=lon*10000000;
 1591              	.LM123:
 1592 0e20 48304BE2 		sub	r3, fp, #72
 1593 0e24 180093E8 		ldmia	r3, {r3-r4}
 1594 0e28 0300A0E1 		mov	r0, r3
 1595 0e2c 0410A0E1 		mov	r1, r4
 1596 0e30 7B2F8FE2 		adr	r2, .L81+40
 1597 0e34 0C0092E8 		ldmia	r2, {r2-r3}
 1598 0e38 FEFFFFEB 		bl	__muldf3
 1599 0e3c 0030A0E1 		mov	r3, r0
 1600 0e40 0140A0E1 		mov	r4, r1
 1601 0e44 0300A0E1 		mov	r0, r3
 1602 0e48 0410A0E1 		mov	r1, r4
 1603 0e4c FEFFFFEB 		bl	__fixdfsi
 1604 0e50 0020A0E1 		mov	r2, r0
 1605 0e54 AC319FE5 		ldr	r3, .L81+12
 1606 0e58 0C2083E5 		str	r2, [r3, #12]
 502:sdk.c         **** 					wpToLL.Y=lat*10000000;
 1608              	.LM124:
 1609 0e5c 40304BE2 		sub	r3, fp, #64
 1610 0e60 180093E8 		ldmia	r3, {r3-r4}
 1611 0e64 0300A0E1 		mov	r0, r3
 1612 0e68 0410A0E1 		mov	r1, r4
 1613 0e6c 1B2E8FE2 		adr	r2, .L81+40
 1614 0e70 0C0092E8 		ldmia	r2, {r2-r3}
 1615 0e74 FEFFFFEB 		bl	__muldf3
 1616 0e78 0030A0E1 		mov	r3, r0
 1617 0e7c 0140A0E1 		mov	r4, r1
 1618 0e80 0300A0E1 		mov	r0, r3
 1619 0e84 0410A0E1 		mov	r1, r4
 1620 0e88 FEFFFFEB 		bl	__fixdfsi
 1621 0e8c 0020A0E1 		mov	r2, r0
 1622 0e90 70319FE5 		ldr	r3, .L81+12
 1623 0e94 102083E5 		str	r2, [r3, #16]
 503:sdk.c         **** 
 504:sdk.c         **** 					//calc chksum
 505:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 1625              	.LM125:
 1626 0e98 68319FE5 		ldr	r3, .L81+12
 1627 0e9c 143093E5 		ldr	r3, [r3, #20]
 1628 0ea0 0338A0E1 		mov	r3, r3, asl #16
 1629 0ea4 2328A0E1 		mov	r2, r3, lsr #16
 1630 0ea8 58319FE5 		ldr	r3, .L81+12
 1631 0eac 183093E5 		ldr	r3, [r3, #24]
 1632 0eb0 0338A0E1 		mov	r3, r3, asl #16
 1633 0eb4 2338A0E1 		mov	r3, r3, lsr #16
 1634 0eb8 033082E0 		add	r3, r2, r3
 1635 0ebc 0338A0E1 		mov	r3, r3, asl #16
 1636 0ec0 2328A0E1 		mov	r2, r3, lsr #16
 1637 0ec4 3C319FE5 		ldr	r3, .L81+12
 1638 0ec8 B630D3E1 		ldrh	r3, [r3, #6]
 1639 0ecc 033082E0 		add	r3, r2, r3
 1640 0ed0 0338A0E1 		mov	r3, r3, asl #16
 1641 0ed4 2328A0E1 		mov	r2, r3, lsr #16
 1642 0ed8 28319FE5 		ldr	r3, .L81+12
 1643 0edc 0C3093E5 		ldr	r3, [r3, #12]
 1644 0ee0 0338A0E1 		mov	r3, r3, asl #16
 1645 0ee4 2338A0E1 		mov	r3, r3, lsr #16
 1646 0ee8 033082E0 		add	r3, r2, r3
 1647 0eec 0338A0E1 		mov	r3, r3, asl #16
 1648 0ef0 2328A0E1 		mov	r2, r3, lsr #16
 1649 0ef4 0C319FE5 		ldr	r3, .L81+12
 1650 0ef8 103093E5 		ldr	r3, [r3, #16]
 1651 0efc 0338A0E1 		mov	r3, r3, asl #16
 1652 0f00 2338A0E1 		mov	r3, r3, lsr #16
 1653 0f04 033082E0 		add	r3, r2, r3
 1654 0f08 0338A0E1 		mov	r3, r3, asl #16
 1655 0f0c 2328A0E1 		mov	r2, r3, lsr #16
 1656 0f10 F0309FE5 		ldr	r3, .L81+12
 1657 0f14 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1658 0f18 033082E0 		add	r3, r2, r3
 1659 0f1c 0338A0E1 		mov	r3, r3, asl #16
 1660 0f20 2328A0E1 		mov	r2, r3, lsr #16
 1661 0f24 DC309FE5 		ldr	r3, .L81+12
 1662 0f28 B830D3E1 		ldrh	r3, [r3, #8]
 1663 0f2c 033082E0 		add	r3, r2, r3
 1664 0f30 0338A0E1 		mov	r3, r3, asl #16
 1665 0f34 2328A0E1 		mov	r2, r3, lsr #16
 1666 0f38 C8309FE5 		ldr	r3, .L81+12
 1667 0f3c 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1668 0f40 033082E0 		add	r3, r2, r3
 1669 0f44 0338A0E1 		mov	r3, r3, asl #16
 1670 0f48 2328A0E1 		mov	r2, r3, lsr #16
 1671 0f4c B4309FE5 		ldr	r3, .L81+12
 1672 0f50 003093E5 		ldr	r3, [r3, #0]
 1673 0f54 0338A0E1 		mov	r3, r3, asl #16
 1674 0f58 2338A0E1 		mov	r3, r3, lsr #16
 1675 0f5c 033082E0 		add	r3, r2, r3
 1676 0f60 0338A0E1 		mov	r3, r3, asl #16
 1677 0f64 2338A0E1 		mov	r3, r3, lsr #16
 1678 0f68 553C43E2 		sub	r3, r3, #21760
 1679 0f6c 563043E2 		sub	r3, r3, #86
 1680 0f70 0338A0E1 		mov	r3, r3, asl #16
 1681 0f74 2338A0E1 		mov	r3, r3, lsr #16
 1682 0f78 0320A0E1 		mov	r2, r3
 1683 0f7c 84309FE5 		ldr	r3, .L81+12
 1684 0f80 BA20C3E1 		strh	r2, [r3, #10]	@ movhi
 506:sdk.c         **** 											+ wpToLL.yaw
 507:sdk.c         **** 											+ wpToLL.height
 508:sdk.c         **** 											+ wpToLL.time
 509:sdk.c         **** 											+ wpToLL.X
 510:sdk.c         **** 											+ wpToLL.Y
 511:sdk.c         **** 											+ wpToLL.max_speed
 512:sdk.c         **** 											+ wpToLL.pos_acc
 513:sdk.c         **** 											+ wpToLL.properties
 514:sdk.c         **** 											+ wpToLL.wp_activated;
 515:sdk.c         **** 
 516:sdk.c         **** 					//send waypoint
 517:sdk.c         **** 					wpCtrlAckTrigger=0;
 1686              	.LM126:
 1687 0f84 80209FE5 		ldr	r2, .L81+16
 1688 0f88 0030A0E3 		mov	r3, #0
 1689 0f8c 0030C2E5 		strb	r3, [r2, #0]
 518:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 1691              	.LM127:
 1692 0f90 78209FE5 		ldr	r2, .L81+20
 1693 0f94 0130A0E3 		mov	r3, #1
 1694 0f98 0030C2E5 		strb	r3, [r2, #0]
 519:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 1696              	.LM128:
 1697 0f9c 70209FE5 		ldr	r2, .L81+24
 1698 0fa0 0130A0E3 		mov	r3, #1
 1699 0fa4 0030C2E5 		strb	r3, [r2, #0]
 520:sdk.c         **** 
 521:sdk.c         **** 					wpExampleState=4;
 1701              	.LM129:
 1702 0fa8 70209FE5 		ldr	r2, .L81+36
 1703 0fac 0430A0E3 		mov	r3, #4
 1704 0fb0 0030C2E5 		strb	r3, [r2, #0]
 1705              	.L65:
 1706              	.LBE4:
 522:sdk.c         **** 				}
 523:sdk.c         **** 
 524:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 1708              	.LM130:
 1709 0fb4 5C309FE5 		ldr	r3, .L81+28
 1710 0fb8 B030D3E1 		ldrh	r3, [r3, #0]
 1711 0fbc 083003E2 		and	r3, r3, #8
 1712 0fc0 000053E3 		cmp	r3, #0
 1713 0fc4 0200000A 		beq	.L62
 525:sdk.c         **** 					wpExampleState=0;
 1715              	.LM131:
 1716 0fc8 50309FE5 		ldr	r3, .L81+36
 1717 0fcc 0020A0E3 		mov	r2, #0
 1718 0fd0 0020C3E5 		strb	r2, [r3, #0]
 1719              	.L62:
 526:sdk.c         **** 
 527:sdk.c         **** 
 528:sdk.c         **** 			}
 529:sdk.c         **** 			if (RO_RC_Data.channel[6]<1600)
 1721              	.LM132:
 1722 0fd4 40309FE5 		ldr	r3, .L81+32
 1723 0fd8 BC20D3E1 		ldrh	r2, [r3, #12]
 1724 0fdc 633EA0E3 		mov	r3, #1584
 1725 0fe0 0F3083E2 		add	r3, r3, #15
 1726 0fe4 030052E1 		cmp	r2, r3
 1727 0fe8 AE00008A 		bhi	.L78
 530:sdk.c         **** 						wpExampleState=0;
 1729              	.LM133:
 1730 0fec 2C309FE5 		ldr	r3, .L81+36
 1731 0ff0 0020A0E3 		mov	r2, #0
 1732 0ff4 0020C3E5 		strb	r2, [r3, #0]
 531:sdk.c         **** 		break;
 1734              	.LM134:
 1735 0ff8 AA0000EA 		b	.L78
 1736              	.L82:
 1737              		.align	2
 1738              	.L81:
 1739 0ffc 00000000 		.word	IMU_CalcData
 1740 1000 2C040000 		.word	originLon.2247
 1741 1004 34040000 		.word	originLat.2246
 1742 1008 00000000 		.word	wpToLL
 1743 100c 00000000 		.word	wpCtrlAckTrigger
 1744 1010 00000000 		.word	wpCtrlWpCmd
 1745 1014 00000000 		.word	wpCtrlWpCmdUpdated
 1746 1018 00000000 		.word	wpCtrlNavStatus
 1747 101c 00000000 		.word	RO_RC_Data
 1748 1020 3C040000 		.word	wpExampleState.2245
 1749 1024 D0126341 		.word	1097011920
 1750 1028 00000000 		.word	0
 1751              	.L47:
 532:sdk.c         **** 
 533:sdk.c         **** 		case 4:
 534:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 535:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 1753              	.LM135:
 1754 102c 20301FE5 		ldr	r3, .L81+24
 1755 1030 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1756 1034 000053E3 		cmp	r3, #0
 1757 1038 8D00001A 		bne	.L70
 1758 103c 38301FE5 		ldr	r3, .L81+16
 1759 1040 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1760 1044 000053E3 		cmp	r3, #0
 1761 1048 8900000A 		beq	.L70
 536:sdk.c         **** 			{
 537:sdk.c         **** 				//check if waypoint was reached and wait time is over
 538:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 1763              	.LM136:
 1764 104c 3C301FE5 		ldr	r3, .L81+28
 1765 1050 B030D3E1 		ldrh	r3, [r3, #0]
 1766 1054 023003E2 		and	r3, r3, #2
 1767 1058 000053E3 		cmp	r3, #0
 1768 105c 7C00000A 		beq	.L73
 539:sdk.c         **** 				{
 540:sdk.c         **** 
 541:sdk.c         **** 					//fill waypoint structure
 542:sdk.c         **** 					wpToLL.max_speed=100;
 1770              	.LM137:
 1771 1060 60201FE5 		ldr	r2, .L81+12
 1772 1064 6430A0E3 		mov	r3, #100
 1773 1068 0530C2E5 		strb	r3, [r2, #5]
 543:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 1775              	.LM138:
 1776 106c 6C201FE5 		ldr	r2, .L81+12
 1777 1070 BB3EA0E3 		mov	r3, #2992
 1778 1074 083083E2 		add	r3, r3, #8
 1779 1078 B830C2E1 		strh	r3, [r2, #8]	@ movhi
 544:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 1781              	.LM139:
 1782 107c 7C201FE5 		ldr	r2, .L81+12
 1783 1080 193EA0E3 		mov	r3, #400
 1784 1084 B630C2E1 		strh	r3, [r2, #6]	@ movhi
 545:sdk.c         **** 					wpToLL.wp_activated=1;
 1786              	.LM140:
 1787 1088 88201FE5 		ldr	r2, .L81+12
 1788 108c 0130A0E3 		mov	r3, #1
 1789 1090 003082E5 		str	r3, [r2, #0]
 546:sdk.c         **** 
 547:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 548:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 1791              	.LM141:
 1792 1094 94201FE5 		ldr	r2, .L81+12
 1793 1098 1730A0E3 		mov	r3, #23
 1794 109c 0430C2E5 		strb	r3, [r2, #4]
 549:sdk.c         **** 
 550:sdk.c         **** 					//use current height and yaw
 551:sdk.c         **** 					wpToLL.yaw=IMU_CalcData.angle_yaw; //use current yaw
 1796              	.LM142:
 1797 10a0 AC301FE5 		ldr	r3, .L81
 1798 10a4 082093E5 		ldr	r2, [r3, #8]
 1799 10a8 A8301FE5 		ldr	r3, .L81+12
 1800 10ac 142083E5 		str	r2, [r3, #20]
 552:sdk.c         **** 					wpToLL.height=IMU_CalcData.height; //use current height
 1802              	.LM143:
 1803 10b0 BC301FE5 		ldr	r3, .L81
 1804 10b4 4C2093E5 		ldr	r2, [r3, #76]
 1805 10b8 B8301FE5 		ldr	r3, .L81+12
 1806 10bc 182083E5 		str	r2, [r3, #24]
 553:sdk.c         **** 
 554:sdk.c         **** 					//go to the beginning
 555:sdk.c         **** 
 556:sdk.c         **** 					wpToLL.X=originLon*10000000;
 1808              	.LM144:
 1809 10c0 C8301FE5 		ldr	r3, .L81+4
 1810 10c4 180093E8 		ldmia	r3, {r3-r4}
 1811 10c8 0300A0E1 		mov	r0, r3
 1812 10cc 0410A0E1 		mov	r1, r4
 1813 10d0 B4204FE2 		adr	r2, .L81+40
 1814 10d4 0C0092E8 		ldmia	r2, {r2-r3}
 1815 10d8 FEFFFFEB 		bl	__muldf3
 1816 10dc 0030A0E1 		mov	r3, r0
 1817 10e0 0140A0E1 		mov	r4, r1
 1818 10e4 0300A0E1 		mov	r0, r3
 1819 10e8 0410A0E1 		mov	r1, r4
 1820 10ec FEFFFFEB 		bl	__fixdfsi
 1821 10f0 0020A0E1 		mov	r2, r0
 1822 10f4 F4301FE5 		ldr	r3, .L81+12
 1823 10f8 0C2083E5 		str	r2, [r3, #12]
 557:sdk.c         **** 					wpToLL.Y=originLat*10000000;
 1825              	.LM145:
 1826 10fc 00311FE5 		ldr	r3, .L81+8
 1827 1100 180093E8 		ldmia	r3, {r3-r4}
 1828 1104 0300A0E1 		mov	r0, r3
 1829 1108 0410A0E1 		mov	r1, r4
 1830 110c F0204FE2 		adr	r2, .L81+40
 1831 1110 0C0092E8 		ldmia	r2, {r2-r3}
 1832 1114 FEFFFFEB 		bl	__muldf3
 1833 1118 0030A0E1 		mov	r3, r0
 1834 111c 0140A0E1 		mov	r4, r1
 1835 1120 0300A0E1 		mov	r0, r3
 1836 1124 0410A0E1 		mov	r1, r4
 1837 1128 FEFFFFEB 		bl	__fixdfsi
 1838 112c 0020A0E1 		mov	r2, r0
 1839 1130 30311FE5 		ldr	r3, .L81+12
 1840 1134 102083E5 		str	r2, [r3, #16]
 558:sdk.c         **** 
 559:sdk.c         **** 					//calc chksum
 560:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 1842              	.LM146:
 1843 1138 38311FE5 		ldr	r3, .L81+12
 1844 113c 143093E5 		ldr	r3, [r3, #20]
 1845 1140 0338A0E1 		mov	r3, r3, asl #16
 1846 1144 2328A0E1 		mov	r2, r3, lsr #16
 1847 1148 48311FE5 		ldr	r3, .L81+12
 1848 114c 183093E5 		ldr	r3, [r3, #24]
 1849 1150 0338A0E1 		mov	r3, r3, asl #16
 1850 1154 2338A0E1 		mov	r3, r3, lsr #16
 1851 1158 033082E0 		add	r3, r2, r3
 1852 115c 0338A0E1 		mov	r3, r3, asl #16
 1853 1160 2328A0E1 		mov	r2, r3, lsr #16
 1854 1164 64311FE5 		ldr	r3, .L81+12
 1855 1168 B630D3E1 		ldrh	r3, [r3, #6]
 1856 116c 033082E0 		add	r3, r2, r3
 1857 1170 0338A0E1 		mov	r3, r3, asl #16
 1858 1174 2328A0E1 		mov	r2, r3, lsr #16
 1859 1178 78311FE5 		ldr	r3, .L81+12
 1860 117c 0C3093E5 		ldr	r3, [r3, #12]
 1861 1180 0338A0E1 		mov	r3, r3, asl #16
 1862 1184 2338A0E1 		mov	r3, r3, lsr #16
 1863 1188 033082E0 		add	r3, r2, r3
 1864 118c 0338A0E1 		mov	r3, r3, asl #16
 1865 1190 2328A0E1 		mov	r2, r3, lsr #16
 1866 1194 94311FE5 		ldr	r3, .L81+12
 1867 1198 103093E5 		ldr	r3, [r3, #16]
 1868 119c 0338A0E1 		mov	r3, r3, asl #16
 1869 11a0 2338A0E1 		mov	r3, r3, lsr #16
 1870 11a4 033082E0 		add	r3, r2, r3
 1871 11a8 0338A0E1 		mov	r3, r3, asl #16
 1872 11ac 2328A0E1 		mov	r2, r3, lsr #16
 1873 11b0 B0311FE5 		ldr	r3, .L81+12
 1874 11b4 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1875 11b8 033082E0 		add	r3, r2, r3
 1876 11bc 0338A0E1 		mov	r3, r3, asl #16
 1877 11c0 2328A0E1 		mov	r2, r3, lsr #16
 1878 11c4 C4311FE5 		ldr	r3, .L81+12
 1879 11c8 B830D3E1 		ldrh	r3, [r3, #8]
 1880 11cc 033082E0 		add	r3, r2, r3
 1881 11d0 0338A0E1 		mov	r3, r3, asl #16
 1882 11d4 2328A0E1 		mov	r2, r3, lsr #16
 1883 11d8 D8311FE5 		ldr	r3, .L81+12
 1884 11dc 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1885 11e0 033082E0 		add	r3, r2, r3
 1886 11e4 0338A0E1 		mov	r3, r3, asl #16
 1887 11e8 2328A0E1 		mov	r2, r3, lsr #16
 1888 11ec EC311FE5 		ldr	r3, .L81+12
 1889 11f0 003093E5 		ldr	r3, [r3, #0]
 1890 11f4 0338A0E1 		mov	r3, r3, asl #16
 1891 11f8 2338A0E1 		mov	r3, r3, lsr #16
 1892 11fc 033082E0 		add	r3, r2, r3
 1893 1200 0338A0E1 		mov	r3, r3, asl #16
 1894 1204 2338A0E1 		mov	r3, r3, lsr #16
 1895 1208 553C43E2 		sub	r3, r3, #21760
 1896 120c 563043E2 		sub	r3, r3, #86
 1897 1210 0338A0E1 		mov	r3, r3, asl #16
 1898 1214 2338A0E1 		mov	r3, r3, lsr #16
 1899 1218 0320A0E1 		mov	r2, r3
 1900 121c 1C321FE5 		ldr	r3, .L81+12
 1901 1220 BA20C3E1 		strh	r2, [r3, #10]	@ movhi
 561:sdk.c         **** 											+ wpToLL.yaw
 562:sdk.c         **** 											+ wpToLL.height
 563:sdk.c         **** 											+ wpToLL.time
 564:sdk.c         **** 											+ wpToLL.X
 565:sdk.c         **** 											+ wpToLL.Y
 566:sdk.c         **** 											+ wpToLL.max_speed
 567:sdk.c         **** 											+ wpToLL.pos_acc
 568:sdk.c         **** 											+ wpToLL.properties
 569:sdk.c         **** 											+ wpToLL.wp_activated;
 570:sdk.c         **** 
 571:sdk.c         **** 					//send waypoint
 572:sdk.c         **** 					wpCtrlAckTrigger=0;
 1903              	.LM147:
 1904 1224 20221FE5 		ldr	r2, .L81+16
 1905 1228 0030A0E3 		mov	r3, #0
 1906 122c 0030C2E5 		strb	r3, [r2, #0]
 573:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 1908              	.LM148:
 1909 1230 28221FE5 		ldr	r2, .L81+20
 1910 1234 0130A0E3 		mov	r3, #1
 1911 1238 0030C2E5 		strb	r3, [r2, #0]
 574:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 1913              	.LM149:
 1914 123c 30221FE5 		ldr	r2, .L81+24
 1915 1240 0130A0E3 		mov	r3, #1
 1916 1244 0030C2E5 		strb	r3, [r2, #0]
 575:sdk.c         **** 
 576:sdk.c         **** 					wpExampleState=0;
 1918              	.LM150:
 1919 1248 30221FE5 		ldr	r2, .L81+36
 1920 124c 0030A0E3 		mov	r3, #0
 1921 1250 0030C2E5 		strb	r3, [r2, #0]
 1922              	.L73:
 577:sdk.c         **** 				}
 578:sdk.c         **** 
 579:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 1924              	.LM151:
 1925 1254 44321FE5 		ldr	r3, .L81+28
 1926 1258 B030D3E1 		ldrh	r3, [r3, #0]
 1927 125c 083003E2 		and	r3, r3, #8
 1928 1260 000053E3 		cmp	r3, #0
 1929 1264 0200000A 		beq	.L70
 580:sdk.c         **** 					wpExampleState=0;
 1931              	.LM152:
 1932 1268 50321FE5 		ldr	r3, .L81+36
 1933 126c 0020A0E3 		mov	r2, #0
 1934 1270 0020C3E5 		strb	r2, [r3, #0]
 1935              	.L70:
 581:sdk.c         **** 
 582:sdk.c         **** 
 583:sdk.c         **** 			}
 584:sdk.c         **** 			if (RO_RC_Data.channel[6]<1600)
 1937              	.LM153:
 1938 1274 60321FE5 		ldr	r3, .L81+32
 1939 1278 BC20D3E1 		ldrh	r2, [r3, #12]
 1940 127c 633EA0E3 		mov	r3, #1584
 1941 1280 0F3083E2 		add	r3, r3, #15
 1942 1284 030052E1 		cmp	r2, r3
 1943 1288 0600008A 		bhi	.L78
 585:sdk.c         **** 						wpExampleState=0;
 1945              	.LM154:
 1946 128c 74321FE5 		ldr	r3, .L81+36
 1947 1290 0020A0E3 		mov	r2, #0
 1948 1294 0020C3E5 		strb	r2, [r3, #0]
 586:sdk.c         **** 		break;
 1950              	.LM155:
 1951 1298 020000EA 		b	.L78
 1952              	.L42:
 587:sdk.c         **** 
 588:sdk.c         **** 		default:
 589:sdk.c         **** 			wpExampleState=0;
 1954              	.LM156:
 1955 129c 84321FE5 		ldr	r3, .L81+36
 1956 12a0 0020A0E3 		mov	r2, #0
 1957 12a4 0020C3E5 		strb	r2, [r3, #0]
 1958              	.L78:
 590:sdk.c         **** 		break;
 591:sdk.c         **** 	}
 592:sdk.c         **** 
 593:sdk.c         **** }
 1960              	.LM157:
 1961 12a8 18D04BE2 		sub	sp, fp, #24
 1962 12ac 70689DE8 		ldmfd	sp, {r4, r5, r6, fp, sp, lr}
 1963 12b0 1EFF2FE1 		bx	lr
 1982              	.Lscope5:
 1983              		.bss
 1984 043d 000000   		.align	2
 1985              	timeout.2477:
 1986 0440 00000000 		.space	4
 1988              		.text
 1989              		.align	2
 1991              		.global	SDK_EXAMPLE_turn_motors_on
 1993              	SDK_EXAMPLE_turn_motors_on:
 594:sdk.c         **** 
 595:sdk.c         **** int SDK_EXAMPLE_turn_motors_on(void) //hold throttle stick down and yaw stick fully left to turn mo
 596:sdk.c         **** {
 1995              	.LM158:
 1996              		@ Function supports interworking.
 1997              		@ args = 0, pretend = 0, frame = 4
 1998              		@ frame_needed = 1, uses_anonymous_args = 0
 1999 12b4 0DC0A0E1 		mov	ip, sp
 2000 12b8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2001 12bc 04B04CE2 		sub	fp, ip, #4
 2002 12c0 04D04DE2 		sub	sp, sp, #4
 597:sdk.c         **** 	static int timeout=0;
 598:sdk.c         **** 
 599:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 2004              	.LM159:
 2005 12c4 E4209FE5 		ldr	r2, .L90
 2006 12c8 0230A0E3 		mov	r3, #2
 2007 12cc 0030C2E5 		strb	r3, [r2, #0]
 600:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 601:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 602:sdk.c         **** 							//0x03: GPS waypoint control
 603:sdk.c         **** 
 604:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 2009              	.LM160:
 2010 12d0 D8209FE5 		ldr	r2, .L90
 2011 12d4 0130A0E3 		mov	r3, #1
 2012 12d8 0130C2E5 		strb	r3, [r2, #1]
 605:sdk.c         **** 							//1: enable control by HL processor
 606:sdk.c         **** 
 607:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0; //make sure stick command is accepted
 2014              	.LM161:
 2015 12dc CC209FE5 		ldr	r2, .L90
 2016 12e0 0030A0E3 		mov	r3, #0
 2017 12e4 0230C2E5 		strb	r3, [r2, #2]
 608:sdk.c         **** 
 609:sdk.c         **** 	if(++timeout>=1000)
 2019              	.LM162:
 2020 12e8 C4309FE5 		ldr	r3, .L90+4
 2021 12ec 003093E5 		ldr	r3, [r3, #0]
 2022 12f0 012083E2 		add	r2, r3, #1
 2023 12f4 B8309FE5 		ldr	r3, .L90+4
 2024 12f8 002083E5 		str	r2, [r3, #0]
 2025 12fc B0309FE5 		ldr	r3, .L90+4
 2026 1300 002093E5 		ldr	r2, [r3, #0]
 2027 1304 F93FA0E3 		mov	r3, #996
 2028 1308 033083E2 		add	r3, r3, #3
 2029 130c 030052E1 		cmp	r2, r3
 2030 1310 050000DA 		ble	.L84
 610:sdk.c         **** 	{
 611:sdk.c         **** 		timeout=0;
 2032              	.LM163:
 2033 1314 98209FE5 		ldr	r2, .L90+4
 2034 1318 0030A0E3 		mov	r3, #0
 2035 131c 003082E5 		str	r3, [r2, #0]
 612:sdk.c         **** 		return(1); //1 => start sequence completed => motors running => user can stop calling this functi
 2037              	.LM164:
 2038 1320 0130A0E3 		mov	r3, #1
 2039 1324 10300BE5 		str	r3, [fp, #-16]
 2040 1328 1B0000EA 		b	.L86
 2041              	.L84:
 613:sdk.c         **** 	}
 614:sdk.c         **** 	else if(timeout>500) //neutral stick command for 500 ms
 2043              	.LM165:
 2044 132c 80309FE5 		ldr	r3, .L90+4
 2045 1330 003093E5 		ldr	r3, [r3, #0]
 2046 1334 7D0F53E3 		cmp	r3, #500
 2047 1338 0B0000DA 		ble	.L87
 615:sdk.c         **** 	{
 616:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 2049              	.LM166:
 2050 133c 74209FE5 		ldr	r2, .L90+8
 2051 1340 0C30A0E3 		mov	r3, #12
 2052 1344 B830C2E1 		strh	r3, [r2, #8]	@ movhi
 617:sdk.c         **** 		WO_CTRL_Input.thrust=0;	//use R/C throttle stick input /2 to control thrust (just for testing)
 2054              	.LM167:
 2055 1348 68209FE5 		ldr	r2, .L90+8
 2056 134c 0030A0E3 		mov	r3, #0
 2057 1350 B630C2E1 		strh	r3, [r2, #6]	@ movhi
 618:sdk.c         **** 		WO_CTRL_Input.yaw=0;
 2059              	.LM168:
 2060 1354 5C209FE5 		ldr	r2, .L90+8
 2061 1358 0030A0E3 		mov	r3, #0
 2062 135c B430C2E1 		strh	r3, [r2, #4]	@ movhi
 619:sdk.c         **** 		return(0);
 2064              	.LM169:
 2065 1360 0030A0E3 		mov	r3, #0
 2066 1364 10300BE5 		str	r3, [fp, #-16]
 2067 1368 0B0000EA 		b	.L86
 2068              	.L87:
 620:sdk.c         **** 	}
 621:sdk.c         **** 	else //hold stick command for 500 ms
 622:sdk.c         **** 	{
 623:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 2070              	.LM170:
 2071 136c 44209FE5 		ldr	r2, .L90+8
 2072 1370 0C30A0E3 		mov	r3, #12
 2073 1374 B830C2E1 		strh	r3, [r2, #8]	@ movhi
 624:sdk.c         **** 		WO_CTRL_Input.thrust=0;	//use R/C throttle stick input /2 to control thrust (just for testing)
 2075              	.LM171:
 2076 1378 38209FE5 		ldr	r2, .L90+8
 2077 137c 0030A0E3 		mov	r3, #0
 2078 1380 B630C2E1 		strh	r3, [r2, #6]	@ movhi
 625:sdk.c         **** 		WO_CTRL_Input.yaw=-2047;
 2080              	.LM172:
 2081 1384 2C209FE5 		ldr	r2, .L90+8
 2082 1388 7F3EE0E3 		mvn	r3, #2032
 2083 138c 0E3043E2 		sub	r3, r3, #14
 2084 1390 B430C2E1 		strh	r3, [r2, #4]	@ movhi
 626:sdk.c         **** 		return(0);
 2086              	.LM173:
 2087 1394 0030A0E3 		mov	r3, #0
 2088 1398 10300BE5 		str	r3, [fp, #-16]
 2089              	.L86:
 2090 139c 10301BE5 		ldr	r3, [fp, #-16]
 627:sdk.c         **** 	}
 628:sdk.c         **** 
 629:sdk.c         **** }
 2092              	.LM174:
 2093 13a0 0300A0E1 		mov	r0, r3
 2094 13a4 0CD04BE2 		sub	sp, fp, #12
 2095 13a8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2096 13ac 1EFF2FE1 		bx	lr
 2097              	.L91:
 2098              		.align	2
 2099              	.L90:
 2100 13b0 00000000 		.word	WO_SDK
 2101 13b4 40040000 		.word	timeout.2477
 2102 13b8 00000000 		.word	WO_CTRL_Input
 2107              	.Lscope6:
 2108              		.bss
 2109              		.align	2
 2110              	timeout.2491:
 2111 0444 00000000 		.space	4
 2113              		.text
 2114              		.align	2
 2116              		.global	SDK_EXAMPLE_turn_motors_off
 2118              	SDK_EXAMPLE_turn_motors_off:
 630:sdk.c         **** 
 631:sdk.c         **** int SDK_EXAMPLE_turn_motors_off(void) //hold throttle stick down and yaw stick fully right to turn 
 632:sdk.c         **** {
 2120              	.LM175:
 2121              		@ Function supports interworking.
 2122              		@ args = 0, pretend = 0, frame = 4
 2123              		@ frame_needed = 1, uses_anonymous_args = 0
 2124 13bc 0DC0A0E1 		mov	ip, sp
 2125 13c0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2126 13c4 04B04CE2 		sub	fp, ip, #4
 2127 13c8 04D04DE2 		sub	sp, sp, #4
 633:sdk.c         **** 	static int timeout=0;
 634:sdk.c         **** 
 635:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 2129              	.LM176:
 2130 13cc E0209FE5 		ldr	r2, .L99
 2131 13d0 0230A0E3 		mov	r3, #2
 2132 13d4 0030C2E5 		strb	r3, [r2, #0]
 636:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 637:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 638:sdk.c         **** 							//0x03: GPS waypoint control
 639:sdk.c         **** 
 640:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 2134              	.LM177:
 2135 13d8 D4209FE5 		ldr	r2, .L99
 2136 13dc 0130A0E3 		mov	r3, #1
 2137 13e0 0130C2E5 		strb	r3, [r2, #1]
 641:sdk.c         **** 							//1: enable control by HL processor
 642:sdk.c         **** 
 643:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0; //make sure stick command is accepted
 2139              	.LM178:
 2140 13e4 C8209FE5 		ldr	r2, .L99
 2141 13e8 0030A0E3 		mov	r3, #0
 2142 13ec 0230C2E5 		strb	r3, [r2, #2]
 644:sdk.c         **** 
 645:sdk.c         **** 	if(++timeout>=1000)
 2144              	.LM179:
 2145 13f0 C0309FE5 		ldr	r3, .L99+4
 2146 13f4 003093E5 		ldr	r3, [r3, #0]
 2147 13f8 012083E2 		add	r2, r3, #1
 2148 13fc B4309FE5 		ldr	r3, .L99+4
 2149 1400 002083E5 		str	r2, [r3, #0]
 2150 1404 AC309FE5 		ldr	r3, .L99+4
 2151 1408 002093E5 		ldr	r2, [r3, #0]
 2152 140c F93FA0E3 		mov	r3, #996
 2153 1410 033083E2 		add	r3, r3, #3
 2154 1414 030052E1 		cmp	r2, r3
 2155 1418 050000DA 		ble	.L93
 646:sdk.c         **** 	{
 647:sdk.c         **** 		timeout=0;
 2157              	.LM180:
 2158 141c 94209FE5 		ldr	r2, .L99+4
 2159 1420 0030A0E3 		mov	r3, #0
 2160 1424 003082E5 		str	r3, [r2, #0]
 648:sdk.c         **** 		return(1); //1 => stop sequence completed => motors turned off => user can stop calling this func
 2162              	.LM181:
 2163 1428 0130A0E3 		mov	r3, #1
 2164 142c 10300BE5 		str	r3, [fp, #-16]
 2165 1430 1A0000EA 		b	.L95
 2166              	.L93:
 649:sdk.c         **** 	}
 650:sdk.c         **** 	else if(timeout>500) //neutral stick command for 500 ms
 2168              	.LM182:
 2169 1434 7C309FE5 		ldr	r3, .L99+4
 2170 1438 003093E5 		ldr	r3, [r3, #0]
 2171 143c 7D0F53E3 		cmp	r3, #500
 2172 1440 0B0000DA 		ble	.L96
 651:sdk.c         **** 	{
 652:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 2174              	.LM183:
 2175 1444 70209FE5 		ldr	r2, .L99+8
 2176 1448 0C30A0E3 		mov	r3, #12
 2177 144c B830C2E1 		strh	r3, [r2, #8]	@ movhi
 653:sdk.c         **** 		WO_CTRL_Input.thrust=0;	//use R/C throttle stick input /2 to control thrust (just for testing)
 2179              	.LM184:
 2180 1450 64209FE5 		ldr	r2, .L99+8
 2181 1454 0030A0E3 		mov	r3, #0
 2182 1458 B630C2E1 		strh	r3, [r2, #6]	@ movhi
 654:sdk.c         **** 		WO_CTRL_Input.yaw=0;
 2184              	.LM185:
 2185 145c 58209FE5 		ldr	r2, .L99+8
 2186 1460 0030A0E3 		mov	r3, #0
 2187 1464 B430C2E1 		strh	r3, [r2, #4]	@ movhi
 655:sdk.c         **** 		return(0);
 2189              	.LM186:
 2190 1468 0030A0E3 		mov	r3, #0
 2191 146c 10300BE5 		str	r3, [fp, #-16]
 2192 1470 0A0000EA 		b	.L95
 2193              	.L96:
 656:sdk.c         **** 	}
 657:sdk.c         **** 	else //hold stick command for 500 ms
 658:sdk.c         **** 	{
 659:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 2195              	.LM187:
 2196 1474 40209FE5 		ldr	r2, .L99+8
 2197 1478 0C30A0E3 		mov	r3, #12
 2198 147c B830C2E1 		strh	r3, [r2, #8]	@ movhi
 660:sdk.c         **** 		WO_CTRL_Input.thrust=0;	//use R/C throttle stick input /2 to control thrust (just for testing)
 2200              	.LM188:
 2201 1480 34209FE5 		ldr	r2, .L99+8
 2202 1484 0030A0E3 		mov	r3, #0
 2203 1488 B630C2E1 		strh	r3, [r2, #6]	@ movhi
 661:sdk.c         **** 		WO_CTRL_Input.yaw=2047;
 2205              	.LM189:
 2206 148c 28209FE5 		ldr	r2, .L99+8
 2207 1490 3E3BE0E3 		mvn	r3, #63488
 2208 1494 B430C2E1 		strh	r3, [r2, #4]	@ movhi
 662:sdk.c         **** 		return(0);
 2210              	.LM190:
 2211 1498 0030A0E3 		mov	r3, #0
 2212 149c 10300BE5 		str	r3, [fp, #-16]
 2213              	.L95:
 2214 14a0 10301BE5 		ldr	r3, [fp, #-16]
 663:sdk.c         **** 	}
 664:sdk.c         **** }
 2216              	.LM191:
 2217 14a4 0300A0E1 		mov	r0, r3
 2218 14a8 0CD04BE2 		sub	sp, fp, #12
 2219 14ac 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2220 14b0 1EFF2FE1 		bx	lr
 2221              	.L100:
 2222              		.align	2
 2223              	.L99:
 2224 14b4 00000000 		.word	WO_SDK
 2225 14b8 44040000 		.word	timeout.2491
 2226 14bc 00000000 		.word	WO_CTRL_Input
 2231              	.Lscope7:
 2232              		.comm	GPS_timeout,4,4
 2233              		.comm	SYSTEM_initialized,1,1
 2234              		.comm	WO_SDK,4,4
 2235              		.comm	RO_ALL_Data,140,4
 2236              		.comm	RO_RC_Data,16,4
 2237              		.comm	WO_Direct_Individual_Motor_Control,8,4
 2238              		.comm	WO_Direct_Motor_Control,4,4
 2239              		.comm	WO_CTRL_Input,12,4
 2240              		.comm	calc_thrust,4,4
 2241              		.comm	calc_pitch,4,4
 2242              		.comm	calc_roll,4,4
 2280              	.Letext0:
 2281              		.ident	"GCC: (GNU) 4.1.1"
DEFINED SYMBOLS
                            *ABS*:00000000 sdk.c
     /tmp/ccFMVEI9.s:134    .bss:00000000 allDataBuffer
     /tmp/ccFMVEI9.s:135    .bss:00000000 $d
     /tmp/ccFMVEI9.s:140    .bss:00000190 receivedViconData
     /tmp/ccFMVEI9.s:146    .bss:000001b8 sendDebugData
     /tmp/ccFMVEI9.s:152    .bss:000001f8 receiveDebugData
     /tmp/ccFMVEI9.s:158    .bss:00000238 sendParamDebug
     /tmp/ccFMVEI9.s:164    .bss:0000025c receiveParamDebug
     /tmp/ccFMVEI9.s:170    .bss:00000280 sendPositionWayPointData
     /tmp/ccFMVEI9.s:176    .bss:0000028c receivePositionWayPointData
     /tmp/ccFMVEI9.s:182    .bss:00000298 sendLandSignal
     /tmp/ccFMVEI9.s:188    .bss:0000029c receiveLandSignal
     /tmp/ccFMVEI9.s:195    .data:00000000 receiveCmdData
     /tmp/ccFMVEI9.s:192    .data:00000000 $d
     /tmp/ccFMVEI9.s:202    .bss:000002a0 sendNormalData
     /tmp/ccFMVEI9.s:208    .bss:000002e0 receiveNormalData
     /tmp/ccFMVEI9.s:214    .bss:00000320 sendDebugArray
     /tmp/ccFMVEI9.s:220    .bss:000003c0 pack_id
     /tmp/ccFMVEI9.s:226    .bss:000003c4 ballData
     /tmp/ccFMVEI9.s:232    .bss:000003e0 vicon_count
     /tmp/ccFMVEI9.s:238    .bss:000003e4 vicon_tp
     /tmp/ccFMVEI9.s:244    .bss:000003e8 receive_valid_data_flag
     /tmp/ccFMVEI9.s:250    .bss:000003ec use_way_point_flag
     /tmp/ccFMVEI9.s:257    .data:00000004 output_thrust
     /tmp/ccFMVEI9.s:264    .bss:000003f0 change_vicon_x
     /tmp/ccFMVEI9.s:270    .bss:000003f4 attitude_u
     /tmp/ccFMVEI9.s:276    .bss:000003f8 my_state
     /tmp/ccFMVEI9.s:283    .data:00000008 my_setpoint
     /tmp/ccFMVEI9.s:297    .bss:00000424 stop_flag.2129
     /tmp/ccFMVEI9.s:301    .bss:00000428 freq.2128
     /tmp/ccFMVEI9.s:308    .data:00000034 temp.2127
     /tmp/ccFMVEI9.s:317    .text:00000000 $a
     /tmp/ccFMVEI9.s:321    .text:00000000 fake_gps3
     /tmp/ccFMVEI9.s:600    .text:00000318 $d
                            *COM*:00000004 WO_SDK
                            *COM*:0000000c WO_CTRL_Input
                            *COM*:0000008c RO_ALL_Data
                            *COM*:00000004 calc_thrust
                            *COM*:00000004 calc_pitch
                            *COM*:00000004 calc_roll
     /tmp/ccFMVEI9.s:625    .text:00000360 $a
     /tmp/ccFMVEI9.s:629    .text:00000360 SDK_mainloop
     /tmp/ccFMVEI9.s:652    .text:0000037c SDK_EXAMPLE_direct_individual_motor_commands
     /tmp/ccFMVEI9.s:819    .text:00000574 $d
                            *COM*:00000008 WO_Direct_Individual_Motor_Control
     /tmp/ccFMVEI9.s:828    .text:00000584 $a
     /tmp/ccFMVEI9.s:832    .text:00000584 SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping
     /tmp/ccFMVEI9.s:921    .text:0000068c $d
                            *COM*:00000004 WO_Direct_Motor_Control
     /tmp/ccFMVEI9.s:927    .text:0000069c $a
     /tmp/ccFMVEI9.s:931    .text:0000069c SDK_EXAMPLE_attitude_commands
     /tmp/ccFMVEI9.s:968    .text:000006e4 $d
     /tmp/ccFMVEI9.s:974    .bss:0000042c originLon.2247
     /tmp/ccFMVEI9.s:978    .bss:00000434 originLat.2246
     /tmp/ccFMVEI9.s:981    .bss:0000043c wpExampleState.2245
     /tmp/ccFMVEI9.s:989    .text:000006ec $a
     /tmp/ccFMVEI9.s:993    .text:000006ec SDK_EXAMPLE_gps_waypoint_control
     /tmp/ccFMVEI9.s:1022   .text:00000728 $d
     /tmp/ccFMVEI9.s:1030   .text:0000073c $a
     /tmp/ccFMVEI9.s:1268   .text:00000a38 $d
                            *COM*:00000010 RO_RC_Data
     /tmp/ccFMVEI9.s:1286   .text:00000a70 $a
     /tmp/ccFMVEI9.s:1739   .text:00000ffc $d
     /tmp/ccFMVEI9.s:1754   .text:0000102c $a
     /tmp/ccFMVEI9.s:1985   .bss:00000440 timeout.2477
     /tmp/ccFMVEI9.s:1993   .text:000012b4 SDK_EXAMPLE_turn_motors_on
     /tmp/ccFMVEI9.s:2100   .text:000013b0 $d
     /tmp/ccFMVEI9.s:2110   .bss:00000444 timeout.2491
     /tmp/ccFMVEI9.s:2114   .text:000013bc $a
     /tmp/ccFMVEI9.s:2118   .text:000013bc SDK_EXAMPLE_turn_motors_off
     /tmp/ccFMVEI9.s:2224   .text:000014b4 $d
                            *COM*:00000004 GPS_timeout
                            *COM*:00000001 SYSTEM_initialized

UNDEFINED SYMBOLS
__floatsisf
__divsf3
__mulsf3
__fixsfsi
__gtsf2
positionControllerInit
positionController
my_this
__floatsidf
__divdf3
__muldf3
__fixdfsi
xy2latlon
GPS_Data
wpCtrlWpCmd
wpCtrlWpCmdUpdated
wpCtrlAckTrigger
wpCtrlNavStatus
IMU_CalcData
wpToLL
